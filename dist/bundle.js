!function(t){var e={};function s(n){if(e[n])return e[n].exports;var i=e[n]={i:n,l:!1,exports:{}};return t[n].call(i.exports,i,i.exports,s),i.l=!0,i.exports}s.m=t,s.c=e,s.d=function(t,e,n){s.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:n})},s.r=function(t){Object.defineProperty(t,"__esModule",{value:!0})},s.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(e,"a",e),e},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},s.p="",s(s.s=10)}([function(t,e){t.exports=class{constructor(t){"string"==typeof t&&(t=document.querySelector(t)),this.$el=t}exists(){return!!this.$el}get(){return this.$el}show(){return this.$el.style.display="block",this}showInline(){return this.$el.style.display="inline",this}hide(){return this.$el.style.display="none",this}disable(){return this.$el.disabled=!0,this}enable(){return this.$el.disabled=!1,this}style(t,e){return this.$el.style[t]=e,this}addClass(t){return this.$el.className+=` ${t}`,this}removeClass(t){return this.$el.className=this.$el.className.replace(t,"").replace("  "," "),this}remove(){return this.$el.parentNode.removeChild(this.$el),this}setRandomBackground({path:t="",range:e=[0,5],length:s=3,ext:n="jpg"}){const[i,o]=e,a=Math.round(Math.random()*(o-i)+i),r=("0".repeat(s)+a).substr(-s);this.$el.style.backgroundImage=`url(${t}/${r}.${n})`}appear(){return this.style("opacity",1),this}disappear(){return this.style("opacity",0),this}focus(){return this.$el.focus(),this}html(t){return void 0===t?this.$el.innerHTML:(this.$el.innerHTML=t,this)}appendHtml(t){return this.$el.innerHTML+=t,this}prependHtml(t){return this.$el.innerHTML=t+this.html(),this}val(t){return void 0===t?this.$el.value:(this.$el.value=t,this)}clear(){return this.$el.value="",this}isVisible(){return""===this.$el.style.display||this.$el.style.display.match(/(block|inline|inline-block)/)}toggle(){return this.isVisible()?(this.hide(),this):(this.show(),this)}caretEnd(){if(this.$el.focus(),void 0!==window.getSelection&&void 0!==document.createRange){var t=document.createRange();t.selectNodeContents(this.$el),t.collapse(!1);var e=window.getSelection();e.removeAllRanges(),e.addRange(t)}else if(void 0!==document.body.createTextRange){var s=document.body.createTextRange();s.moveToElementText(this.$el),s.collapse(!1),s.select()}return this}src(t){return void 0===t?this.$el.src:(this.$el.src=t,this)}scrollBottom(){return this.$el.scrollTop=this.$el.scrollHeight,this}on(t,e){return this.$el.addEventListener(t,e),this}static injectStyles(t){const e=document.createElement("style");e.type="text/css",e.innerHTML=t,document.getElementsByTagName("head")[0].appendChild(e)}}},function(t,e,s){var n,i,o={},a=(n=function(){return window&&document&&document.all&&!window.atob},function(){return void 0===i&&(i=n.apply(this,arguments)),i}),r=function(t){var e={};return function(t){if("function"==typeof t)return t();if(void 0===e[t]){var s=function(t){return document.querySelector(t)}.call(this,t);if(window.HTMLIFrameElement&&s instanceof window.HTMLIFrameElement)try{s=s.contentDocument.head}catch(t){s=null}e[t]=s}return e[t]}}(),l=null,c=0,d=[],h=s(23);function u(t,e){for(var s=0;s<t.length;s++){var n=t[s],i=o[n.id];if(i){i.refs++;for(var a=0;a<i.parts.length;a++)i.parts[a](n.parts[a]);for(;a<n.parts.length;a++)i.parts.push(E(n.parts[a],e))}else{var r=[];for(a=0;a<n.parts.length;a++)r.push(E(n.parts[a],e));o[n.id]={id:n.id,refs:1,parts:r}}}}function p(t,e){for(var s=[],n={},i=0;i<t.length;i++){var o=t[i],a=e.base?o[0]+e.base:o[0],r={css:o[1],media:o[2],sourceMap:o[3]};n[a]?n[a].parts.push(r):s.push(n[a]={id:a,parts:[r]})}return s}function _(t,e){var s=r(t.insertInto);if(!s)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var n=d[d.length-1];if("top"===t.insertAt)n?n.nextSibling?s.insertBefore(e,n.nextSibling):s.appendChild(e):s.insertBefore(e,s.firstChild),d.push(e);else if("bottom"===t.insertAt)s.appendChild(e);else{if("object"!=typeof t.insertAt||!t.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var i=r(t.insertInto+" "+t.insertAt.before);s.insertBefore(e,i)}}function m(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t);var e=d.indexOf(t);e>=0&&d.splice(e,1)}function f(t){var e=document.createElement("style");return t.attrs.type="text/css",C(e,t.attrs),_(t,e),e}function C(t,e){Object.keys(e).forEach(function(s){t.setAttribute(s,e[s])})}function E(t,e){var s,n,i,o;if(e.transform&&t.css){if(!(o=e.transform(t.css)))return function(){};t.css=o}if(e.singleton){var a=c++;s=l||(l=f(e)),n=b.bind(null,s,a,!1),i=b.bind(null,s,a,!0)}else t.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(s=function(t){var e=document.createElement("link");return t.attrs.type="text/css",t.attrs.rel="stylesheet",C(e,t.attrs),_(t,e),e}(e),n=function(t,e,s){var n=s.css,i=s.sourceMap,o=void 0===e.convertToAbsoluteUrls&&i;(e.convertToAbsoluteUrls||o)&&(n=h(n));i&&(n+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(i))))+" */");var a=new Blob([n],{type:"text/css"}),r=t.href;t.href=URL.createObjectURL(a),r&&URL.revokeObjectURL(r)}.bind(null,s,e),i=function(){m(s),s.href&&URL.revokeObjectURL(s.href)}):(s=f(e),n=function(t,e){var s=e.css,n=e.media;n&&t.setAttribute("media",n);if(t.styleSheet)t.styleSheet.cssText=s;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(s))}}.bind(null,s),i=function(){m(s)});return n(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;n(t=e)}else i()}}t.exports=function(t,e){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(e=e||{}).attrs="object"==typeof e.attrs?e.attrs:{},e.singleton||"boolean"==typeof e.singleton||(e.singleton=a()),e.insertInto||(e.insertInto="head"),e.insertAt||(e.insertAt="bottom");var s=p(t,e);return u(s,e),function(t){for(var n=[],i=0;i<s.length;i++){var a=s[i];(r=o[a.id]).refs--,n.push(r)}t&&u(p(t,e),e);for(i=0;i<n.length;i++){var r;if(0===(r=n[i]).refs){for(var l=0;l<r.parts.length;l++)r.parts[l]();delete o[r.id]}}}};var g,v=(g=[],function(t,e){return g[t]=e,g.filter(Boolean).join("\n")});function b(t,e,s,n){var i=s?"":n.css;if(t.styleSheet)t.styleSheet.cssText=v(e,i);else{var o=document.createTextNode(i),a=t.childNodes;a[e]&&t.removeChild(a[e]),a.length?t.insertBefore(o,a[e]):t.appendChild(o)}}},function(t,e){t.exports=function(t){var e=[];return e.toString=function(){return this.map(function(e){var s=function(t,e){var s=t[1]||"",n=t[3];if(!n)return s;if(e&&"function"==typeof btoa){var i=(a=n,"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(a))))+" */"),o=n.sources.map(function(t){return"/*# sourceURL="+n.sourceRoot+t+" */"});return[s].concat(o).concat([i]).join("\n")}var a;return[s].join("\n")}(e,t);return e[2]?"@media "+e[2]+"{"+s+"}":s}).join("")},e.i=function(t,s){"string"==typeof t&&(t=[[null,t,""]]);for(var n={},i=0;i<this.length;i++){var o=this[i][0];"number"==typeof o&&(n[o]=!0)}for(i=0;i<t.length;i++){var a=t[i];"number"==typeof a[0]&&n[a[0]]||(s&&!a[2]?a[2]=s:s&&(a[2]="("+a[2]+") and ("+s+")"),e.push(a))}},e}},function(t,e,s){"use strict";(function(t,n){var i,o=s(8);i="undefined"!=typeof self?self:"undefined"!=typeof window?window:void 0!==t?t:n;var a=Object(o.a)(i);e.a=a}).call(this,s(4),s(30)(t))},function(t,e){var s;s=function(){return this}();try{s=s||Function("return this")()||(0,eval)("this")}catch(t){"object"==typeof window&&(s=window)}t.exports=s},function(t,e,s){t.exports=s(22)},function(t,e,s){var n,i;
/**!
 * Sortable
 * @author	RubaXa   <trash@rubaxa.org>
 * @license MIT
 */
/**!
 * Sortable
 * @author	RubaXa   <trash@rubaxa.org>
 * @license MIT
 */
!function(o){"use strict";void 0===(i="function"==typeof(n=o)?n.call(e,s,e,t):n)||(t.exports=i)}(function(){"use strict";if("undefined"==typeof window||!window.document)return function(){throw new Error("Sortable.js requires a window with a document")};var t,e,s,n,i,o,a,r,l,c,d,h,u,p,_,m,f,C,E,g,v,b={},y=/\s+/g,L=/left|right|inline/,I="Sortable"+(new Date).getTime(),T=window,S=T.document,A=T.parseInt,w=T.setTimeout,R=T.jQuery||T.Zepto,D=T.Polymer,N=!1,O="draggable"in S.createElement("div"),P=!navigator.userAgent.match(/(?:Trident.*rv[ :]?11\.|msie)/i)&&((v=S.createElement("x")).style.cssText="pointer-events:auto","auto"===v.style.pointerEvents),M=!1,x=Math.abs,k=Math.min,B=[],H=[],F=nt(function(t,e,s){if(s&&e.scroll){var n,i,o,a,d,h,u=s[I],p=e.scrollSensitivity,_=e.scrollSpeed,m=t.clientX,f=t.clientY,C=window.innerWidth,E=window.innerHeight;if(l!==s&&(r=e.scroll,l=s,c=e.scrollFn,!0===r)){r=s;do{if(r.offsetWidth<r.scrollWidth||r.offsetHeight<r.scrollHeight)break}while(r=r.parentNode)}r&&(n=r,i=r.getBoundingClientRect(),o=(x(i.right-m)<=p)-(x(i.left-m)<=p),a=(x(i.bottom-f)<=p)-(x(i.top-f)<=p)),o||a||(a=(E-f<=p)-(f<=p),((o=(C-m<=p)-(m<=p))||a)&&(n=T)),b.vx===o&&b.vy===a&&b.el===n||(b.el=n,b.vx=o,b.vy=a,clearInterval(b.pid),n&&(b.pid=setInterval(function(){if(h=a?a*_:0,d=o?o*_:0,"function"==typeof c)return c.call(u,d,h,t);n===T?T.scrollTo(T.pageXOffset+d,T.pageYOffset+h):(n.scrollTop+=h,n.scrollLeft+=d)},24)))}},30),U=function(t){function e(t,e){return void 0!==t&&!0!==t||(t=s.name),"function"==typeof t?t:function(s,n){var i=n.options.group.name;return e?t:t&&(t.join?t.indexOf(i)>-1:i==t)}}var s={},n=t.group;n&&"object"==typeof n||(n={name:n}),s.name=n.name,s.checkPull=e(n.pull,!0),s.checkPut=e(n.put),s.revertClone=n.revertClone,t.group=s};try{window.addEventListener("test",null,Object.defineProperty({},"passive",{get:function(){N={capture:!1,passive:!1}}}))}catch(t){}function j(t,e){if(!t||!t.nodeType||1!==t.nodeType)throw"Sortable: `el` must be HTMLElement, and not "+{}.toString.call(t);this.el=t,this.options=e=it({},e),t[I]=this;var s={group:Math.random(),sort:!0,disabled:!1,store:null,handle:null,scroll:!0,scrollSensitivity:30,scrollSpeed:10,draggable:/[uo]l/i.test(t.nodeName)?"li":">*",ghostClass:"sortable-ghost",chosenClass:"sortable-chosen",dragClass:"sortable-drag",ignore:"a, img",filter:null,preventOnFilter:!0,animation:0,setData:function(t,e){t.setData("Text",e.textContent)},dropBubble:!1,dragoverBubble:!1,dataIdAttr:"data-id",delay:0,forceFallback:!1,fallbackClass:"sortable-fallback",fallbackOnBody:!1,fallbackTolerance:0,fallbackOffset:{x:0,y:0},supportPointer:!1!==j.supportPointer};for(var n in s)!(n in e)&&(e[n]=s[n]);for(var i in U(e),this)"_"===i.charAt(0)&&"function"==typeof this[i]&&(this[i]=this[i].bind(this));this.nativeDraggable=!e.forceFallback&&O,W(t,"mousedown",this._onTapStart),W(t,"touchstart",this._onTapStart),e.supportPointer&&W(t,"pointerdown",this._onTapStart),this.nativeDraggable&&(W(t,"dragover",this),W(t,"dragenter",this)),H.push(this._onDragOver),e.store&&this.sort(e.store.get(this))}function G(e,s){"clone"!==e.lastPullMode&&(s=!0),n&&n.state!==s&&(X(n,"display",s?"none":""),s||n.state&&(e.options.group.revertClone?(i.insertBefore(n,o),e._animate(t,n)):i.insertBefore(n,t)),n.state=s)}function V(t,e,s){if(t){s=s||S;do{if(">*"===e&&t.parentNode===s||st(t,e))return t}while(t=$(t))}return null}function $(t){var e=t.host;return e&&e.nodeType?e:t.parentNode}function W(t,e,s){t.addEventListener(e,s,N)}function q(t,e,s){t.removeEventListener(e,s,N)}function Y(t,e,s){if(t)if(t.classList)t.classList[s?"add":"remove"](e);else{var n=(" "+t.className+" ").replace(y," ").replace(" "+e+" "," ");t.className=(n+(s?" "+e:"")).replace(y," ")}}function X(t,e,s){var n=t&&t.style;if(n){if(void 0===s)return S.defaultView&&S.defaultView.getComputedStyle?s=S.defaultView.getComputedStyle(t,""):t.currentStyle&&(s=t.currentStyle),void 0===e?s:s[e];e in n||(e="-webkit-"+e),n[e]=s+("string"==typeof s?"":"px")}}function K(t,e,s){if(t){var n=t.getElementsByTagName(e),i=0,o=n.length;if(s)for(;i<o;i++)s(n[i],i);return n}return[]}function z(t,e,s,i,o,a,r,l){t=t||e[I];var c=S.createEvent("Event"),d=t.options,h="on"+s.charAt(0).toUpperCase()+s.substr(1);c.initEvent(s,!0,!0),c.to=o||e,c.from=a||e,c.item=i||e,c.clone=n,c.oldIndex=r,c.newIndex=l,e.dispatchEvent(c),d[h]&&d[h].call(t,c)}function J(t,e,s,n,i,o,a,r){var l,c,d=t[I],h=d.options.onMove;return(l=S.createEvent("Event")).initEvent("move",!0,!0),l.to=e,l.from=t,l.dragged=s,l.draggedRect=n,l.related=i||e,l.relatedRect=o||e.getBoundingClientRect(),l.willInsertAfter=r,t.dispatchEvent(l),h&&(c=h.call(d,l,a)),c}function Q(t){t.draggable=!1}function Z(){M=!1}function tt(t){for(var e=t.tagName+t.className+t.src+t.href+t.textContent,s=e.length,n=0;s--;)n+=e.charCodeAt(s);return n.toString(36)}function et(t,e){var s=0;if(!t||!t.parentNode)return-1;for(;t&&(t=t.previousElementSibling);)"TEMPLATE"===t.nodeName.toUpperCase()||">*"!==e&&!st(t,e)||s++;return s}function st(t,e){if(t){var s=(e=e.split(".")).shift().toUpperCase(),n=new RegExp("\\s("+e.join("|")+")(?=\\s)","g");return!(""!==s&&t.nodeName.toUpperCase()!=s||e.length&&((" "+t.className+" ").match(n)||[]).length!=e.length)}return!1}function nt(t,e){var s,n;return function(){void 0===s&&(s=arguments,n=this,w(function(){1===s.length?t.call(n,s[0]):t.apply(n,s),s=void 0},e))}}function it(t,e){if(t&&e)for(var s in e)e.hasOwnProperty(s)&&(t[s]=e[s]);return t}function ot(t){return D&&D.dom?D.dom(t).cloneNode(!0):R?R(t).clone(!0)[0]:t.cloneNode(!0)}function at(t){return w(t,0)}function rt(t){return clearTimeout(t)}return j.prototype={constructor:j,_onTapStart:function(e){var s,n=this,i=this.el,o=this.options,r=o.preventOnFilter,l=e.type,c=e.touches&&e.touches[0],d=(c||e).target,h=e.target.shadowRoot&&e.path&&e.path[0]||d,u=o.filter;if(function(t){var e=t.getElementsByTagName("input"),s=e.length;for(;s--;){var n=e[s];n.checked&&B.push(n)}}(i),!t&&!(/mousedown|pointerdown/.test(l)&&0!==e.button||o.disabled)&&!h.isContentEditable&&(d=V(d,o.draggable,i))&&a!==d){if(s=et(d,o.draggable),"function"==typeof u){if(u.call(this,e,d,this))return z(n,h,"filter",d,i,i,s),void(r&&e.preventDefault())}else if(u&&(u=u.split(",").some(function(t){if(t=V(h,t.trim(),i))return z(n,t,"filter",d,i,i,s),!0})))return void(r&&e.preventDefault());o.handle&&!V(h,o.handle,i)||this._prepareDragStart(e,c,d,s)}},_prepareDragStart:function(s,n,r,l){var c,d=this,h=d.el,u=d.options,_=h.ownerDocument;r&&!t&&r.parentNode===h&&(C=s,i=h,e=(t=r).parentNode,o=t.nextSibling,a=r,m=u.group,p=l,this._lastX=(n||s).clientX,this._lastY=(n||s).clientY,t.style["will-change"]="all",c=function(){d._disableDelayedDrag(),t.draggable=d.nativeDraggable,Y(t,u.chosenClass,!0),d._triggerDragStart(s,n),z(d,i,"choose",t,i,i,p)},u.ignore.split(",").forEach(function(e){K(t,e.trim(),Q)}),W(_,"mouseup",d._onDrop),W(_,"touchend",d._onDrop),W(_,"touchcancel",d._onDrop),W(_,"selectstart",d),u.supportPointer&&W(_,"pointercancel",d._onDrop),u.delay?(W(_,"mouseup",d._disableDelayedDrag),W(_,"touchend",d._disableDelayedDrag),W(_,"touchcancel",d._disableDelayedDrag),W(_,"mousemove",d._disableDelayedDrag),W(_,"touchmove",d._disableDelayedDrag),u.supportPointer&&W(_,"pointermove",d._disableDelayedDrag),d._dragStartTimer=w(c,u.delay)):c())},_disableDelayedDrag:function(){var t=this.el.ownerDocument;clearTimeout(this._dragStartTimer),q(t,"mouseup",this._disableDelayedDrag),q(t,"touchend",this._disableDelayedDrag),q(t,"touchcancel",this._disableDelayedDrag),q(t,"mousemove",this._disableDelayedDrag),q(t,"touchmove",this._disableDelayedDrag),q(t,"pointermove",this._disableDelayedDrag)},_triggerDragStart:function(e,s){(s=s||("touch"==e.pointerType?e:null))?(C={target:t,clientX:s.clientX,clientY:s.clientY},this._onDragStart(C,"touch")):this.nativeDraggable?(W(t,"dragend",this),W(i,"dragstart",this._onDragStart)):this._onDragStart(C,!0);try{S.selection?at(function(){S.selection.empty()}):window.getSelection().removeAllRanges()}catch(t){}},_dragStarted:function(){if(i&&t){var e=this.options;Y(t,e.ghostClass,!0),Y(t,e.dragClass,!1),j.active=this,z(this,i,"start",t,i,i,p)}else this._nulling()},_emulateDragOver:function(){if(E){if(this._lastX===E.clientX&&this._lastY===E.clientY)return;this._lastX=E.clientX,this._lastY=E.clientY,P||X(s,"display","none");var t=S.elementFromPoint(E.clientX,E.clientY),e=t,n=H.length;if(t&&t.shadowRoot&&(e=t=t.shadowRoot.elementFromPoint(E.clientX,E.clientY)),e)do{if(e[I]){for(;n--;)H[n]({clientX:E.clientX,clientY:E.clientY,target:t,rootEl:e});break}t=e}while(e=e.parentNode);P||X(s,"display","")}},_onTouchMove:function(t){if(C){var e=this.options,n=e.fallbackTolerance,i=e.fallbackOffset,o=t.touches?t.touches[0]:t,a=o.clientX-C.clientX+i.x,r=o.clientY-C.clientY+i.y,l=t.touches?"translate3d("+a+"px,"+r+"px,0)":"translate("+a+"px,"+r+"px)";if(!j.active){if(n&&k(x(o.clientX-this._lastX),x(o.clientY-this._lastY))<n)return;this._dragStarted()}this._appendGhost(),g=!0,E=o,X(s,"webkitTransform",l),X(s,"mozTransform",l),X(s,"msTransform",l),X(s,"transform",l),t.preventDefault()}},_appendGhost:function(){if(!s){var e,n=t.getBoundingClientRect(),o=X(t),a=this.options;Y(s=t.cloneNode(!0),a.ghostClass,!1),Y(s,a.fallbackClass,!0),Y(s,a.dragClass,!0),X(s,"top",n.top-A(o.marginTop,10)),X(s,"left",n.left-A(o.marginLeft,10)),X(s,"width",n.width),X(s,"height",n.height),X(s,"opacity","0.8"),X(s,"position","fixed"),X(s,"zIndex","100000"),X(s,"pointerEvents","none"),a.fallbackOnBody&&S.body.appendChild(s)||i.appendChild(s),e=s.getBoundingClientRect(),X(s,"width",2*n.width-e.width),X(s,"height",2*n.height-e.height)}},_onDragStart:function(e,s){var o=this,a=e.dataTransfer,r=o.options;o._offUpEvents(),m.checkPull(o,o,t,e)&&((n=ot(t)).draggable=!1,n.style["will-change"]="",X(n,"display","none"),Y(n,o.options.chosenClass,!1),o._cloneId=at(function(){i.insertBefore(n,t),z(o,i,"clone",t)})),Y(t,r.dragClass,!0),s?("touch"===s?(W(S,"touchmove",o._onTouchMove),W(S,"touchend",o._onDrop),W(S,"touchcancel",o._onDrop),r.supportPointer&&(W(S,"pointermove",o._onTouchMove),W(S,"pointerup",o._onDrop))):(W(S,"mousemove",o._onTouchMove),W(S,"mouseup",o._onDrop)),o._loopId=setInterval(o._emulateDragOver,50)):(a&&(a.effectAllowed="move",r.setData&&r.setData.call(o,a,t)),W(S,"drop",o),o._dragStartId=at(o._dragStarted))},_onDragOver:function(a){var r,l,c,p,_=this.el,C=this.options,E=C.group,v=j.active,b=m===E,y=!1,T=C.sort;if(void 0!==a.preventDefault&&(a.preventDefault(),!C.dragoverBubble&&a.stopPropagation()),!t.animated&&(g=!0,v&&!C.disabled&&(b?T||(p=!i.contains(t)):f===this||(v.lastPullMode=m.checkPull(this,v,t,a))&&E.checkPut(this,v,t,a))&&(void 0===a.rootEl||a.rootEl===this.el))){if(F(a,C,this.el),M)return;if(r=V(a.target,C.draggable,_),l=t.getBoundingClientRect(),f!==this&&(f=this,y=!0),p)return G(v,!0),e=i,void(n||o?i.insertBefore(t,n||o):T||i.appendChild(t));if(0===_.children.length||_.children[0]===s||_===a.target&&function(t,e){var s=t.lastElementChild.getBoundingClientRect();return e.clientY-(s.top+s.height)>5||e.clientX-(s.left+s.width)>5}(_,a)){if(0!==_.children.length&&_.children[0]!==s&&_===a.target&&(r=_.lastElementChild),r){if(r.animated)return;c=r.getBoundingClientRect()}G(v,b),!1!==J(i,_,t,l,r,c,a)&&(t.contains(_)||(_.appendChild(t),e=_),this._animate(l,t),r&&this._animate(c,r))}else if(r&&!r.animated&&r!==t&&void 0!==r.parentNode[I]){d!==r&&(d=r,h=X(r),u=X(r.parentNode));var S=(c=r.getBoundingClientRect()).right-c.left,A=c.bottom-c.top,R=L.test(h.cssFloat+h.display)||"flex"==u.display&&0===u["flex-direction"].indexOf("row"),D=r.offsetWidth>t.offsetWidth,N=r.offsetHeight>t.offsetHeight,O=(R?(a.clientX-c.left)/S:(a.clientY-c.top)/A)>.5,P=r.nextElementSibling,x=!1;if(R){var k=t.offsetTop,B=r.offsetTop;x=k===B?r.previousElementSibling===t&&!D||O&&D:r.previousElementSibling===t||t.previousElementSibling===r?(a.clientY-c.top)/A>.5:B>k}else y||(x=P!==t&&!N||O&&N);var H=J(i,_,t,l,r,c,a,x);!1!==H&&(1!==H&&-1!==H||(x=1===H),M=!0,w(Z,30),G(v,b),t.contains(_)||(x&&!P?_.appendChild(t):r.parentNode.insertBefore(t,x?P:r)),e=t.parentNode,this._animate(l,t),this._animate(c,r))}}},_animate:function(t,e){var s=this.options.animation;if(s){var n=e.getBoundingClientRect();1===t.nodeType&&(t=t.getBoundingClientRect()),X(e,"transition","none"),X(e,"transform","translate3d("+(t.left-n.left)+"px,"+(t.top-n.top)+"px,0)"),e.offsetWidth,X(e,"transition","all "+s+"ms"),X(e,"transform","translate3d(0,0,0)"),clearTimeout(e.animated),e.animated=w(function(){X(e,"transition",""),X(e,"transform",""),e.animated=!1},s)}},_offUpEvents:function(){var t=this.el.ownerDocument;q(S,"touchmove",this._onTouchMove),q(S,"pointermove",this._onTouchMove),q(t,"mouseup",this._onDrop),q(t,"touchend",this._onDrop),q(t,"pointerup",this._onDrop),q(t,"touchcancel",this._onDrop),q(t,"pointercancel",this._onDrop),q(t,"selectstart",this)},_onDrop:function(a){var r=this.el,l=this.options;clearInterval(this._loopId),clearInterval(b.pid),clearTimeout(this._dragStartTimer),rt(this._cloneId),rt(this._dragStartId),q(S,"mouseover",this),q(S,"mousemove",this._onTouchMove),this.nativeDraggable&&(q(S,"drop",this),q(r,"dragstart",this._onDragStart)),this._offUpEvents(),a&&(g&&(a.preventDefault(),!l.dropBubble&&a.stopPropagation()),s&&s.parentNode&&s.parentNode.removeChild(s),i!==e&&"clone"===j.active.lastPullMode||n&&n.parentNode&&n.parentNode.removeChild(n),t&&(this.nativeDraggable&&q(t,"dragend",this),Q(t),t.style["will-change"]="",Y(t,this.options.ghostClass,!1),Y(t,this.options.chosenClass,!1),z(this,i,"unchoose",t,e,i,p),i!==e?(_=et(t,l.draggable))>=0&&(z(null,e,"add",t,e,i,p,_),z(this,i,"remove",t,e,i,p,_),z(null,e,"sort",t,e,i,p,_),z(this,i,"sort",t,e,i,p,_)):t.nextSibling!==o&&(_=et(t,l.draggable))>=0&&(z(this,i,"update",t,e,i,p,_),z(this,i,"sort",t,e,i,p,_)),j.active&&(null!=_&&-1!==_||(_=p),z(this,i,"end",t,e,i,p,_),this.save()))),this._nulling()},_nulling:function(){i=t=e=s=o=n=a=r=l=C=E=g=_=d=h=f=m=j.active=null,B.forEach(function(t){t.checked=!0}),B.length=0},handleEvent:function(e){switch(e.type){case"drop":case"dragend":this._onDrop(e);break;case"dragover":case"dragenter":t&&(this._onDragOver(e),function(t){t.dataTransfer&&(t.dataTransfer.dropEffect="move");t.preventDefault()}(e));break;case"mouseover":this._onDrop(e);break;case"selectstart":e.preventDefault()}},toArray:function(){for(var t,e=[],s=this.el.children,n=0,i=s.length,o=this.options;n<i;n++)V(t=s[n],o.draggable,this.el)&&e.push(t.getAttribute(o.dataIdAttr)||tt(t));return e},sort:function(t){var e={},s=this.el;this.toArray().forEach(function(t,n){var i=s.children[n];V(i,this.options.draggable,s)&&(e[t]=i)},this),t.forEach(function(t){e[t]&&(s.removeChild(e[t]),s.appendChild(e[t]))})},save:function(){var t=this.options.store;t&&t.set(this)},closest:function(t,e){return V(t,e||this.options.draggable,this.el)},option:function(t,e){var s=this.options;if(void 0===e)return s[t];s[t]=e,"group"===t&&U(s)},destroy:function(){var t=this.el;t[I]=null,q(t,"mousedown",this._onTapStart),q(t,"touchstart",this._onTapStart),q(t,"pointerdown",this._onTapStart),this.nativeDraggable&&(q(t,"dragover",this),q(t,"dragenter",this)),Array.prototype.forEach.call(t.querySelectorAll("[draggable]"),function(t){t.removeAttribute("draggable")}),H.splice(H.indexOf(this._onDragOver),1),this._onDrop(),this.el=t=null}},W(S,"touchmove",function(t){j.active&&t.preventDefault()}),j.utils={on:W,off:q,css:X,find:K,is:function(t,e){return!!V(t,e,t)},extend:it,throttle:nt,closest:V,toggleClass:Y,clone:ot,index:et,nextTick:at,cancelNextTick:rt},j.create=function(t,e){return new j(t,e)},j.version="1.7.0",j})},function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var s=arguments[e];for(var n in s)Object.prototype.hasOwnProperty.call(s,n)&&(t[n]=s[n])}return t};function i(t){return t&&t.__esModule?t:{default:t}}e.default=function(t,e){var s=n({key:"redux",merge:a.default,slicer:o.default,serialize:JSON.stringify,deserialize:JSON.parse},e),i=s.key,r=s.merge,l=s.slicer,c=s.serialize,d=s.deserialize;return function(e){return function(s,n,o){"function"==typeof n&&void 0===o&&(o=n,n=void 0);var a=void 0,h=void 0;try{a=d(localStorage.getItem(i)),h=r(n,a)}catch(t){console.warn("Failed to retrieve initialize state from localStorage:",t)}var u=e(s,h,o),p=l(t);return u.subscribe(function(){var t=u.getState(),e=p(t);try{localStorage.setItem(i,c(e))}catch(t){console.warn("Unable to persist state to localStorage:",t)}}),u}}};var o=i(s(29)),a=i(s(26));t.exports=e.default},function(t,e,s){"use strict";function n(t){var e,s=t.Symbol;return"function"==typeof s?s.observable?e=s.observable:(e=s("observable"),s.observable=e):e="@@observable",e}s.d(e,"a",function(){return n})},function(t,e,s){t.exports=function(t,e){if("string"==typeof t){var s=t;if(!(t=window.document.querySelector(t)))throw new Error('"'+s+'" does not match any HTML elements')}if(!t)throw new Error('"'+t+'" is not a valid HTML element');"function"==typeof e&&(e={onDrop:e});var r;return t.addEventListener("dragenter",l,!1),t.addEventListener("dragover",c,!1),t.addEventListener("dragleave",d,!1),t.addEventListener("drop",h,!1),function(){u(),t.removeEventListener("dragenter",l,!1),t.removeEventListener("dragover",c,!1),t.removeEventListener("dragleave",d,!1),t.removeEventListener("drop",h,!1)};function l(t){return e.onDragEnter&&e.onDragEnter(t),t.stopPropagation(),t.preventDefault(),!1}function c(s){if(s.stopPropagation(),s.preventDefault(),s.dataTransfer.items){var n=a(s.dataTransfer.items),i=n.filter(function(t){return"file"===t.kind}),o=n.filter(function(t){return"string"===t.kind});if(0===i.length&&!e.onDropText)return;if(0===o.length&&!e.onDrop)return;if(0===i.length&&0===o.length)return}return t.classList.add("drag"),clearTimeout(r),e.onDragOver&&e.onDragOver(s),s.dataTransfer.dropEffect="copy",!1}function d(t){return t.stopPropagation(),t.preventDefault(),e.onDragLeave&&e.onDragLeave(t),clearTimeout(r),r=setTimeout(u,50),!1}function h(t){t.stopPropagation(),t.preventDefault(),e.onDragLeave&&e.onDragLeave(t),clearTimeout(r),u();var s={x:t.clientX,y:t.clientY},l=t.dataTransfer.getData("text");if(l&&e.onDropText&&e.onDropText(l,s),t.dataTransfer.files){console.log("e.dataTransfer.files");var c=a(t.dataTransfer.files);if(0===c.length)return;c.forEach(function(t){t.fullPath="/"+t.name}),e.onDrop&&e.onDrop(c,s)}else if(t.dataTransfer.items){console.log("e.dataTransfer.items");var d=a(t.dataTransfer.items).filter(function(t){return"file"===t.kind});if(0===d.length)return;i(d.map(function(t){return function(e){!function(t,e){var s=[];if(t.isFile)t.file(function(s){s.fullPath=t.fullPath,e(null,s)},function(t){e(t)});else if(t.isDirectory){var n=t.createReader();!function t(){n.readEntries(function(n){n.length>0?(s=s.concat(a(n)),t()):i(s.map(function(t){return function(e){o(t,e)}}),e)})}()}}(t.webkitGetAsEntry(),e)}}),function(t,i){if(t)throw t;e.onDrop&&e.onDrop(n(i),s)})}return!1}function u(){t.classList.remove("drag")}};var n=s(33),i=s(32);function o(t,e){var s=[];if(t.isFile){t.file(function(s){s.fullPath=t.fullPath;e(null,s)},function(t){e(t)})}else if(t.isDirectory){var n=t.createReader();r()}function r(){n.readEntries(function(t){if(t.length>0){s=s.concat(a(t));r()}else{l()}})}function l(){i(s.map(function(t){return function(e){o(t,e)}}),e)}}function a(t){return Array.prototype.slice.call(t||[],0)}},function(t,e,s){"use strict";s.r(e);var n=s(9),i=s.n(n),o=s(34),a="object"==typeof self&&self&&self.Object===Object&&self,r=(o.a||a||Function("return this")()).Symbol,l=Object.prototype,c=l.hasOwnProperty,d=l.toString,h=r?r.toStringTag:void 0;var u=function(t){var e=c.call(t,h),s=t[h];try{t[h]=void 0;var n=!0}catch(t){}var i=d.call(t);return n&&(e?t[h]=s:delete t[h]),i},p=Object.prototype.toString;var _=function(t){return p.call(t)},m="[object Null]",f="[object Undefined]",C=r?r.toStringTag:void 0;var E=function(t){return null==t?void 0===t?f:m:C&&C in Object(t)?u(t):_(t)};var g=function(t,e){return function(s){return t(e(s))}}(Object.getPrototypeOf,Object);var v=function(t){return null!=t&&"object"==typeof t},b="[object Object]",y=Function.prototype,L=Object.prototype,I=y.toString,T=L.hasOwnProperty,S=I.call(Object);var A=function(t){if(!v(t)||E(t)!=b)return!1;var e=g(t);if(null===e)return!0;var s=T.call(e,"constructor")&&e.constructor;return"function"==typeof s&&s instanceof s&&I.call(s)==S},w=s(3),R={INIT:"@@redux/INIT"};function D(){for(var t=arguments.length,e=Array(t),s=0;s<t;s++)e[s]=arguments[s];return 0===e.length?function(t){return t}:1===e.length?e[0]:e.reduce(function(t,e){return function(){return t(e.apply(void 0,arguments))}})}Object.assign;var N=s(7),O=s.n(N);const P={ADD_IMAGE:(t,e)=>({...t,images:t.images.concat([e.image]),count:t.count+1}),REMOVE_IMAGE:(t,e)=>({...t,images:t.images.reduce((t,s)=>(s.id!==e.id&&t.push(s),t),[]),count:t.count-1}),SORT_IMAGE:(t,{newIndex:e,oldIndex:s})=>{const n=[].concat(t.images),i=t.images[s];t.images[e],t.count;let o=e;e>s&&(o=e+1),n.splice(o,0,i);let a=s;return e<s&&(a=s+1),n.splice(a,1),{...t,images:n}},ADD_IMAGE_COLLECTION:(t,e)=>({...t,images:t.images.concat(e.images),count:t.count+e.images.length}),CLEAR:(t,e)=>({images:[],count:0})};var M=function(t,e){return console.log(e),e.type in P?P[e.type](t,e):t},x=s(0),k=s.n(x);s(25);const B=t=>`\n  <div class="count-number">${t}</div>\n`;var H=class{constructor(t){this.store=t,this.state=this.getState(),t.subscribe(()=>{const t=this.getState();t!==this.state&&(this.state=t,this.render())})}getState(){return this.store.getState().count}mount(t){return this.el=new k.a(t),this}render(){const t=B(this.state);this.el.html(t)}},F=s(6),U=s.n(F),j=s(5),G=s.n(j);s(19);var V=new class{constructor(){this.$el=new k.a("#loading")}show(){this.$el.appear()}hide(){this.$el.disappear()}};s(17);const $=(t=[],e)=>t.map((t,e)=>G()({...t,index:e})).join("");var W=class{constructor(t){this.store=t,this.state=this.getState(),t.subscribe(()=>{const t=this.getState();t!==this.state&&(this.state=t,this.render(),V.hide())})}removeImage(t,{id:e}){t.stopPropagation(),console.log("REMOVE IMAGE",e),this.store.dispatch({type:"REMOVE_IMAGE",id:e})}add(t){this.store.dispatch({type:"ADD_IMAGE_COLLECTION",images:t})}getState(){return this.store.getState().images}events(){this.$el.on("click",t=>{t.stopPropagation(),console.log("IMAGE LIST CLICK",t),t.target.className.match(/^remove.*$/)&&this.removeImage(t,t.target.dataset)})}mount(t){return this.$el=new k.a(t),this.events(),this}onSort({oldIndex:t,newIndex:e,item:s}){const{id:n}=s.dataset;this.store.dispatch({type:"SORT_IMAGE",newIndex:e,oldIndex:t})}render(){const t=$(this.state,this);this.$el.html(t),U.a.create(this.$el.get(),{onSort:t=>this.onSort(t)})}};s(15);var q=class{onAction(t){console.log("NOTIFIER action",t)}show(t){return this.$el.get().MaterialSnackbar.showSnackbar(t),this}mount(t){return this.$el=new k.a(t),this}};s(13);const Y=t=>`\n  <div id="clear-action" class="reset ${t?"":"disabled"}">\n    <div class="action-icon no-events">\n      <i class="material-icons">clear</i>\n    </div>\n  </div>\n`;var X=class{constructor(t){this.store=t,this.state=this.getState(),t.subscribe(()=>{const t=this.getState();t!==this.state&&(this.state=t,this.render())})}getState(){return this.store.getState().count}clear(){this.state&&confirm("Are you sure you want to remove ALL images?")&&this.store.dispatch({type:"CLEAR"})}events(){this.$el.on("click",t=>{if("clear-action"===t.target.id)return this.clear()})}mount(t){return this.$el=new k.a(t),this.events(),this}render(){const t=Y(this.state);this.$el.html(t)}};s(11);const K=function t(e,s,n){var i;if("function"==typeof s&&void 0===n&&(n=s,s=void 0),void 0!==n){if("function"!=typeof n)throw new Error("Expected the enhancer to be a function.");return n(t)(e,s)}if("function"!=typeof e)throw new Error("Expected the reducer to be a function.");var o=e,a=s,r=[],l=r,c=!1;function d(){l===r&&(l=r.slice())}function h(){return a}function u(t){if("function"!=typeof t)throw new Error("Expected listener to be a function.");var e=!0;return d(),l.push(t),function(){if(e){e=!1,d();var s=l.indexOf(t);l.splice(s,1)}}}function p(t){if(!A(t))throw new Error("Actions must be plain objects. Use custom middleware for async actions.");if(void 0===t.type)throw new Error('Actions may not have an undefined "type" property. Have you misspelled a constant?');if(c)throw new Error("Reducers may not dispatch actions.");try{c=!0,a=o(a,t)}finally{c=!1}for(var e=r=l,s=0;s<e.length;s++)(0,e[s])();return t}return p({type:R.INIT}),(i={dispatch:p,subscribe:u,getState:h,replaceReducer:function(t){if("function"!=typeof t)throw new Error("Expected the nextReducer to be a function.");o=t,p({type:R.INIT})}})[w.a]=function(){var t,e=u;return(t={subscribe:function(t){if("object"!=typeof t)throw new TypeError("Expected the observer to be an object.");function s(){t.next&&t.next(h())}return s(),{unsubscribe:e(s)}}})[w.a]=function(){return this},t},i}(M,{count:0,images:[]},D(O()())),z=new q;z.mount("#notifier"),new H(K).mount("#count").render();const J=new W(K);J.mount("#image-list").render(),new X(K).mount("#actions").render(),i()("body",(t,e)=>{V.show();const s=t.length,n=[];(t=Array.from(t)).forEach(t=>{const e=t.type||"image/jpeg",i=new FileReader;i.addEventListener("load",i=>{const o=i.target.result;n.push({id:t.name,name:t.name,description:"",src:`data:${e};${o}`}),s===n.length&&J.add(n)}),i.addEventListener("error",t=>{console.error("FileReader error"+t)}),i.readAsDataURL(t)})}),setTimeout(()=>{z.show({message:"Rock it!"})},2e3)},function(t,e){
/**
 * material-design-lite - Material Design Components in CSS, JS and HTML
 * @version v1.3.0
 * @license Apache-2.0
 * @copyright 2015 Google, Inc.
 * @link https://github.com/google/material-design-lite
 */
!function(){"use strict";function t(t,e){if(t){if(e.element_.classList.contains(e.CssClasses_.MDL_JS_RIPPLE_EFFECT)){var s=document.createElement("span");s.classList.add(e.CssClasses_.MDL_RIPPLE_CONTAINER),s.classList.add(e.CssClasses_.MDL_JS_RIPPLE_EFFECT);var n=document.createElement("span");n.classList.add(e.CssClasses_.MDL_RIPPLE),s.appendChild(n),t.appendChild(s)}t.addEventListener("click",function(s){if("#"===t.getAttribute("href").charAt(0)){s.preventDefault();var n=t.href.split("#")[1],i=e.element_.querySelector("#"+n);e.resetTabState_(),e.resetPanelState_(),t.classList.add(e.CssClasses_.ACTIVE_CLASS),i.classList.add(e.CssClasses_.ACTIVE_CLASS)}})}}function e(t,e,s,n){function i(){var i=t.href.split("#")[1],o=n.content_.querySelector("#"+i);n.resetTabState_(e),n.resetPanelState_(s),t.classList.add(n.CssClasses_.IS_ACTIVE),o.classList.add(n.CssClasses_.IS_ACTIVE)}if(n.tabBar_.classList.contains(n.CssClasses_.JS_RIPPLE_EFFECT)){var o=document.createElement("span");o.classList.add(n.CssClasses_.RIPPLE_CONTAINER),o.classList.add(n.CssClasses_.JS_RIPPLE_EFFECT);var a=document.createElement("span");a.classList.add(n.CssClasses_.RIPPLE),o.appendChild(a),t.appendChild(o)}n.tabBar_.classList.contains(n.CssClasses_.TAB_MANUAL_SWITCH)||t.addEventListener("click",function(e){"#"===t.getAttribute("href").charAt(0)&&(e.preventDefault(),i())}),t.show=i}var s={upgradeDom:function(t,e){},upgradeElement:function(t,e){},upgradeElements:function(t){},upgradeAllRegistered:function(){},registerUpgradedCallback:function(t,e){},register:function(t){},downgradeElements:function(t){}};(s=function(){function t(t,e){for(var s=0;s<r.length;s++)if(r[s].className===t)return void 0!==e&&(r[s]=e),r[s];return!1}function e(t){var e=t.getAttribute("data-upgraded");return null===e?[""]:e.split(",")}function s(t,s){return-1!==e(t).indexOf(s)}function n(t,e,s){if("CustomEvent"in window&&"function"==typeof window.CustomEvent)return new CustomEvent(t,{bubbles:e,cancelable:s});var n=document.createEvent("Events");return n.initEvent(t,e,s),n}function i(e,s){if(void 0===e&&void 0===s)for(var n=0;n<r.length;n++)i(r[n].className,r[n].cssClass);else{var a=e;if(void 0===s){var l=t(a);l&&(s=l.cssClass)}for(var c=document.querySelectorAll("."+s),d=0;d<c.length;d++)o(c[d],a)}}function o(i,o){if(!("object"==typeof i&&i instanceof Element))throw new Error("Invalid argument provided to upgrade MDL element.");var a=n("mdl-componentupgrading",!0,!0);if(i.dispatchEvent(a),!a.defaultPrevented){var d=e(i),h=[];if(o)s(i,o)||h.push(t(o));else{var u=i.classList;r.forEach(function(t){u.contains(t.cssClass)&&-1===h.indexOf(t)&&!s(i,t.className)&&h.push(t)})}for(var p,_=0,m=h.length;_<m;_++){if(!(p=h[_]))throw new Error("Unable to find a registered component for the given class.");d.push(p.className),i.setAttribute("data-upgraded",d.join(","));var f=new p.classConstructor(i);f[c]=p,l.push(f);for(var C=0,E=p.callbacks.length;C<E;C++)p.callbacks[C](i);p.widget&&(i[p.className]=f);var g=n("mdl-componentupgraded",!0,!1);i.dispatchEvent(g)}}}function a(t){if(t){var e=l.indexOf(t);l.splice(e,1);var s=t.element_.getAttribute("data-upgraded").split(","),i=s.indexOf(t[c].classAsString);s.splice(i,1),t.element_.setAttribute("data-upgraded",s.join(","));var o=n("mdl-componentdowngraded",!0,!1);t.element_.dispatchEvent(o)}}var r=[],l=[],c="mdlComponentConfigInternal_";return{upgradeDom:i,upgradeElement:o,upgradeElements:function t(e){Array.isArray(e)||(e=e instanceof Element?[e]:Array.prototype.slice.call(e));for(var s,n=0,i=e.length;n<i;n++)(s=e[n])instanceof HTMLElement&&(o(s),s.children.length>0&&t(s.children))},upgradeAllRegistered:function(){for(var t=0;t<r.length;t++)i(r[t].className)},registerUpgradedCallback:function(e,s){var n=t(e);n&&n.callbacks.push(s)},register:function(e){var s=!0;void 0===e.widget&&void 0===e.widget||(s=e.widget||e.widget);var n={classConstructor:e.constructor||e.constructor,className:e.classAsString||e.classAsString,cssClass:e.cssClass||e.cssClass,widget:s,callbacks:[]};if(r.forEach(function(t){if(t.cssClass===n.cssClass)throw new Error("The provided cssClass has already been registered: "+t.cssClass);if(t.className===n.className)throw new Error("The provided className has already been registered")}),e.constructor.prototype.hasOwnProperty(c))throw new Error("MDL component classes must not have "+c+" defined as a property.");t(e.classAsString,n)||r.push(n)},downgradeElements:function(t){var e=function(t){l.filter(function(e){return e.element_===t}).forEach(a)};if(t instanceof Array||t instanceof NodeList)for(var s=0;s<t.length;s++)e(t[s]);else{if(!(t instanceof Node))throw new Error("Invalid argument provided to downgrade MDL nodes.");e(t)}}}}()).ComponentConfigPublic,s.ComponentConfig,s.Component,s.upgradeDom=s.upgradeDom,s.upgradeElement=s.upgradeElement,s.upgradeElements=s.upgradeElements,s.upgradeAllRegistered=s.upgradeAllRegistered,s.registerUpgradedCallback=s.registerUpgradedCallback,s.register=s.register,s.downgradeElements=s.downgradeElements,window.componentHandler=s,window.componentHandler=s,window.addEventListener("load",function(){"classList"in document.createElement("div")&&"querySelector"in document&&"addEventListener"in window&&Array.prototype.forEach?(document.documentElement.classList.add("mdl-js"),s.upgradeAllRegistered()):(s.upgradeElement=function(){},s.register=function(){})}),Date.now||(Date.now=function(){return(new Date).getTime()},Date.now=Date.now);for(var n=["webkit","moz"],i=0;i<n.length&&!window.requestAnimationFrame;++i){var o=n[i];window.requestAnimationFrame=window[o+"RequestAnimationFrame"],window.cancelAnimationFrame=window[o+"CancelAnimationFrame"]||window[o+"CancelRequestAnimationFrame"],window.requestAnimationFrame=window.requestAnimationFrame,window.cancelAnimationFrame=window.cancelAnimationFrame}if(/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent)||!window.requestAnimationFrame||!window.cancelAnimationFrame){var a=0;window.requestAnimationFrame=function(t){var e=Date.now(),s=Math.max(a+16,e);return setTimeout(function(){t(a=s)},s-e)},window.cancelAnimationFrame=clearTimeout,window.requestAnimationFrame=window.requestAnimationFrame,window.cancelAnimationFrame=window.cancelAnimationFrame}var r=function(t){this.element_=t,this.init()};window.MaterialButton=r,r.prototype.Constant_={},r.prototype.CssClasses_={RIPPLE_EFFECT:"mdl-js-ripple-effect",RIPPLE_CONTAINER:"mdl-button__ripple-container",RIPPLE:"mdl-ripple"},r.prototype.blurHandler_=function(t){t&&this.element_.blur()},r.prototype.disable=function(){this.element_.disabled=!0},r.prototype.disable=r.prototype.disable,r.prototype.enable=function(){this.element_.disabled=!1},r.prototype.enable=r.prototype.enable,r.prototype.init=function(){if(this.element_){if(this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)){var t=document.createElement("span");t.classList.add(this.CssClasses_.RIPPLE_CONTAINER),this.rippleElement_=document.createElement("span"),this.rippleElement_.classList.add(this.CssClasses_.RIPPLE),t.appendChild(this.rippleElement_),this.boundRippleBlurHandler=this.blurHandler_.bind(this),this.rippleElement_.addEventListener("mouseup",this.boundRippleBlurHandler),this.element_.appendChild(t)}this.boundButtonBlurHandler=this.blurHandler_.bind(this),this.element_.addEventListener("mouseup",this.boundButtonBlurHandler),this.element_.addEventListener("mouseleave",this.boundButtonBlurHandler)}},s.register({constructor:r,classAsString:"MaterialButton",cssClass:"mdl-js-button",widget:!0});var l=function(t){this.element_=t,this.init()};window.MaterialCheckbox=l,l.prototype.Constant_={TINY_TIMEOUT:.001},l.prototype.CssClasses_={INPUT:"mdl-checkbox__input",BOX_OUTLINE:"mdl-checkbox__box-outline",FOCUS_HELPER:"mdl-checkbox__focus-helper",TICK_OUTLINE:"mdl-checkbox__tick-outline",RIPPLE_EFFECT:"mdl-js-ripple-effect",RIPPLE_IGNORE_EVENTS:"mdl-js-ripple-effect--ignore-events",RIPPLE_CONTAINER:"mdl-checkbox__ripple-container",RIPPLE_CENTER:"mdl-ripple--center",RIPPLE:"mdl-ripple",IS_FOCUSED:"is-focused",IS_DISABLED:"is-disabled",IS_CHECKED:"is-checked",IS_UPGRADED:"is-upgraded"},l.prototype.onChange_=function(t){this.updateClasses_()},l.prototype.onFocus_=function(t){this.element_.classList.add(this.CssClasses_.IS_FOCUSED)},l.prototype.onBlur_=function(t){this.element_.classList.remove(this.CssClasses_.IS_FOCUSED)},l.prototype.onMouseUp_=function(t){this.blur_()},l.prototype.updateClasses_=function(){this.checkDisabled(),this.checkToggleState()},l.prototype.blur_=function(){window.setTimeout(function(){this.inputElement_.blur()}.bind(this),this.Constant_.TINY_TIMEOUT)},l.prototype.checkToggleState=function(){this.inputElement_.checked?this.element_.classList.add(this.CssClasses_.IS_CHECKED):this.element_.classList.remove(this.CssClasses_.IS_CHECKED)},l.prototype.checkToggleState=l.prototype.checkToggleState,l.prototype.checkDisabled=function(){this.inputElement_.disabled?this.element_.classList.add(this.CssClasses_.IS_DISABLED):this.element_.classList.remove(this.CssClasses_.IS_DISABLED)},l.prototype.checkDisabled=l.prototype.checkDisabled,l.prototype.disable=function(){this.inputElement_.disabled=!0,this.updateClasses_()},l.prototype.disable=l.prototype.disable,l.prototype.enable=function(){this.inputElement_.disabled=!1,this.updateClasses_()},l.prototype.enable=l.prototype.enable,l.prototype.check=function(){this.inputElement_.checked=!0,this.updateClasses_()},l.prototype.check=l.prototype.check,l.prototype.uncheck=function(){this.inputElement_.checked=!1,this.updateClasses_()},l.prototype.uncheck=l.prototype.uncheck,l.prototype.init=function(){if(this.element_){this.inputElement_=this.element_.querySelector("."+this.CssClasses_.INPUT);var t=document.createElement("span");t.classList.add(this.CssClasses_.BOX_OUTLINE);var e=document.createElement("span");e.classList.add(this.CssClasses_.FOCUS_HELPER);var s=document.createElement("span");if(s.classList.add(this.CssClasses_.TICK_OUTLINE),t.appendChild(s),this.element_.appendChild(e),this.element_.appendChild(t),this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)){this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS),this.rippleContainerElement_=document.createElement("span"),this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER),this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_EFFECT),this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER),this.boundRippleMouseUp=this.onMouseUp_.bind(this),this.rippleContainerElement_.addEventListener("mouseup",this.boundRippleMouseUp);var n=document.createElement("span");n.classList.add(this.CssClasses_.RIPPLE),this.rippleContainerElement_.appendChild(n),this.element_.appendChild(this.rippleContainerElement_)}this.boundInputOnChange=this.onChange_.bind(this),this.boundInputOnFocus=this.onFocus_.bind(this),this.boundInputOnBlur=this.onBlur_.bind(this),this.boundElementMouseUp=this.onMouseUp_.bind(this),this.inputElement_.addEventListener("change",this.boundInputOnChange),this.inputElement_.addEventListener("focus",this.boundInputOnFocus),this.inputElement_.addEventListener("blur",this.boundInputOnBlur),this.element_.addEventListener("mouseup",this.boundElementMouseUp),this.updateClasses_(),this.element_.classList.add(this.CssClasses_.IS_UPGRADED)}},s.register({constructor:l,classAsString:"MaterialCheckbox",cssClass:"mdl-js-checkbox",widget:!0});var c=function(t){this.element_=t,this.init()};window.MaterialIconToggle=c,c.prototype.Constant_={TINY_TIMEOUT:.001},c.prototype.CssClasses_={INPUT:"mdl-icon-toggle__input",JS_RIPPLE_EFFECT:"mdl-js-ripple-effect",RIPPLE_IGNORE_EVENTS:"mdl-js-ripple-effect--ignore-events",RIPPLE_CONTAINER:"mdl-icon-toggle__ripple-container",RIPPLE_CENTER:"mdl-ripple--center",RIPPLE:"mdl-ripple",IS_FOCUSED:"is-focused",IS_DISABLED:"is-disabled",IS_CHECKED:"is-checked"},c.prototype.onChange_=function(t){this.updateClasses_()},c.prototype.onFocus_=function(t){this.element_.classList.add(this.CssClasses_.IS_FOCUSED)},c.prototype.onBlur_=function(t){this.element_.classList.remove(this.CssClasses_.IS_FOCUSED)},c.prototype.onMouseUp_=function(t){this.blur_()},c.prototype.updateClasses_=function(){this.checkDisabled(),this.checkToggleState()},c.prototype.blur_=function(){window.setTimeout(function(){this.inputElement_.blur()}.bind(this),this.Constant_.TINY_TIMEOUT)},c.prototype.checkToggleState=function(){this.inputElement_.checked?this.element_.classList.add(this.CssClasses_.IS_CHECKED):this.element_.classList.remove(this.CssClasses_.IS_CHECKED)},c.prototype.checkToggleState=c.prototype.checkToggleState,c.prototype.checkDisabled=function(){this.inputElement_.disabled?this.element_.classList.add(this.CssClasses_.IS_DISABLED):this.element_.classList.remove(this.CssClasses_.IS_DISABLED)},c.prototype.checkDisabled=c.prototype.checkDisabled,c.prototype.disable=function(){this.inputElement_.disabled=!0,this.updateClasses_()},c.prototype.disable=c.prototype.disable,c.prototype.enable=function(){this.inputElement_.disabled=!1,this.updateClasses_()},c.prototype.enable=c.prototype.enable,c.prototype.check=function(){this.inputElement_.checked=!0,this.updateClasses_()},c.prototype.check=c.prototype.check,c.prototype.uncheck=function(){this.inputElement_.checked=!1,this.updateClasses_()},c.prototype.uncheck=c.prototype.uncheck,c.prototype.init=function(){if(this.element_){if(this.inputElement_=this.element_.querySelector("."+this.CssClasses_.INPUT),this.element_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)){this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS),this.rippleContainerElement_=document.createElement("span"),this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER),this.rippleContainerElement_.classList.add(this.CssClasses_.JS_RIPPLE_EFFECT),this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER),this.boundRippleMouseUp=this.onMouseUp_.bind(this),this.rippleContainerElement_.addEventListener("mouseup",this.boundRippleMouseUp);var t=document.createElement("span");t.classList.add(this.CssClasses_.RIPPLE),this.rippleContainerElement_.appendChild(t),this.element_.appendChild(this.rippleContainerElement_)}this.boundInputOnChange=this.onChange_.bind(this),this.boundInputOnFocus=this.onFocus_.bind(this),this.boundInputOnBlur=this.onBlur_.bind(this),this.boundElementOnMouseUp=this.onMouseUp_.bind(this),this.inputElement_.addEventListener("change",this.boundInputOnChange),this.inputElement_.addEventListener("focus",this.boundInputOnFocus),this.inputElement_.addEventListener("blur",this.boundInputOnBlur),this.element_.addEventListener("mouseup",this.boundElementOnMouseUp),this.updateClasses_(),this.element_.classList.add("is-upgraded")}},s.register({constructor:c,classAsString:"MaterialIconToggle",cssClass:"mdl-js-icon-toggle",widget:!0});var d=function(t){this.element_=t,this.init()};window.MaterialMenu=d,d.prototype.Constant_={TRANSITION_DURATION_SECONDS:.3,TRANSITION_DURATION_FRACTION:.8,CLOSE_TIMEOUT:150},d.prototype.Keycodes_={ENTER:13,ESCAPE:27,SPACE:32,UP_ARROW:38,DOWN_ARROW:40},d.prototype.CssClasses_={CONTAINER:"mdl-menu__container",OUTLINE:"mdl-menu__outline",ITEM:"mdl-menu__item",ITEM_RIPPLE_CONTAINER:"mdl-menu__item-ripple-container",RIPPLE_EFFECT:"mdl-js-ripple-effect",RIPPLE_IGNORE_EVENTS:"mdl-js-ripple-effect--ignore-events",RIPPLE:"mdl-ripple",IS_UPGRADED:"is-upgraded",IS_VISIBLE:"is-visible",IS_ANIMATING:"is-animating",BOTTOM_LEFT:"mdl-menu--bottom-left",BOTTOM_RIGHT:"mdl-menu--bottom-right",TOP_LEFT:"mdl-menu--top-left",TOP_RIGHT:"mdl-menu--top-right",UNALIGNED:"mdl-menu--unaligned"},d.prototype.init=function(){if(this.element_){var t=document.createElement("div");t.classList.add(this.CssClasses_.CONTAINER),this.element_.parentElement.insertBefore(t,this.element_),this.element_.parentElement.removeChild(this.element_),t.appendChild(this.element_),this.container_=t;var e=document.createElement("div");e.classList.add(this.CssClasses_.OUTLINE),this.outline_=e,t.insertBefore(e,this.element_);var s=this.element_.getAttribute("for")||this.element_.getAttribute("data-mdl-for"),n=null;s&&((n=document.getElementById(s))&&(this.forElement_=n,n.addEventListener("click",this.handleForClick_.bind(this)),n.addEventListener("keydown",this.handleForKeyboardEvent_.bind(this))));var i=this.element_.querySelectorAll("."+this.CssClasses_.ITEM);this.boundItemKeydown_=this.handleItemKeyboardEvent_.bind(this),this.boundItemClick_=this.handleItemClick_.bind(this);for(var o=0;o<i.length;o++)i[o].addEventListener("click",this.boundItemClick_),i[o].tabIndex="-1",i[o].addEventListener("keydown",this.boundItemKeydown_);if(this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT))for(this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS),o=0;o<i.length;o++){var a=i[o],r=document.createElement("span");r.classList.add(this.CssClasses_.ITEM_RIPPLE_CONTAINER);var l=document.createElement("span");l.classList.add(this.CssClasses_.RIPPLE),r.appendChild(l),a.appendChild(r),a.classList.add(this.CssClasses_.RIPPLE_EFFECT)}this.element_.classList.contains(this.CssClasses_.BOTTOM_LEFT)&&this.outline_.classList.add(this.CssClasses_.BOTTOM_LEFT),this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)&&this.outline_.classList.add(this.CssClasses_.BOTTOM_RIGHT),this.element_.classList.contains(this.CssClasses_.TOP_LEFT)&&this.outline_.classList.add(this.CssClasses_.TOP_LEFT),this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)&&this.outline_.classList.add(this.CssClasses_.TOP_RIGHT),this.element_.classList.contains(this.CssClasses_.UNALIGNED)&&this.outline_.classList.add(this.CssClasses_.UNALIGNED),t.classList.add(this.CssClasses_.IS_UPGRADED)}},d.prototype.handleForClick_=function(t){if(this.element_&&this.forElement_){var e=this.forElement_.getBoundingClientRect(),s=this.forElement_.parentElement.getBoundingClientRect();this.element_.classList.contains(this.CssClasses_.UNALIGNED)||(this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)?(this.container_.style.right=s.right-e.right+"px",this.container_.style.top=this.forElement_.offsetTop+this.forElement_.offsetHeight+"px"):this.element_.classList.contains(this.CssClasses_.TOP_LEFT)?(this.container_.style.left=this.forElement_.offsetLeft+"px",this.container_.style.bottom=s.bottom-e.top+"px"):this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)?(this.container_.style.right=s.right-e.right+"px",this.container_.style.bottom=s.bottom-e.top+"px"):(this.container_.style.left=this.forElement_.offsetLeft+"px",this.container_.style.top=this.forElement_.offsetTop+this.forElement_.offsetHeight+"px"))}this.toggle(t)},d.prototype.handleForKeyboardEvent_=function(t){if(this.element_&&this.container_&&this.forElement_){var e=this.element_.querySelectorAll("."+this.CssClasses_.ITEM+":not([disabled])");e&&e.length>0&&this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)&&(t.keyCode===this.Keycodes_.UP_ARROW?(t.preventDefault(),e[e.length-1].focus()):t.keyCode===this.Keycodes_.DOWN_ARROW&&(t.preventDefault(),e[0].focus()))}},d.prototype.handleItemKeyboardEvent_=function(t){if(this.element_&&this.container_){var e=this.element_.querySelectorAll("."+this.CssClasses_.ITEM+":not([disabled])");if(e&&e.length>0&&this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)){var s=Array.prototype.slice.call(e).indexOf(t.target);if(t.keyCode===this.Keycodes_.UP_ARROW)t.preventDefault(),s>0?e[s-1].focus():e[e.length-1].focus();else if(t.keyCode===this.Keycodes_.DOWN_ARROW)t.preventDefault(),e.length>s+1?e[s+1].focus():e[0].focus();else if(t.keyCode===this.Keycodes_.SPACE||t.keyCode===this.Keycodes_.ENTER){t.preventDefault();var n=new MouseEvent("mousedown");t.target.dispatchEvent(n),n=new MouseEvent("mouseup"),t.target.dispatchEvent(n),t.target.click()}else t.keyCode===this.Keycodes_.ESCAPE&&(t.preventDefault(),this.hide())}}},d.prototype.handleItemClick_=function(t){t.target.hasAttribute("disabled")?t.stopPropagation():(this.closing_=!0,window.setTimeout(function(t){this.hide(),this.closing_=!1}.bind(this),this.Constant_.CLOSE_TIMEOUT))},d.prototype.applyClip_=function(t,e){this.element_.classList.contains(this.CssClasses_.UNALIGNED)?this.element_.style.clip="":this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)?this.element_.style.clip="rect(0 "+e+"px 0 "+e+"px)":this.element_.classList.contains(this.CssClasses_.TOP_LEFT)?this.element_.style.clip="rect("+t+"px 0 "+t+"px 0)":this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)?this.element_.style.clip="rect("+t+"px "+e+"px "+t+"px "+e+"px)":this.element_.style.clip=""},d.prototype.removeAnimationEndListener_=function(t){t.target.classList.remove(d.prototype.CssClasses_.IS_ANIMATING)},d.prototype.addAnimationEndListener_=function(){this.element_.addEventListener("transitionend",this.removeAnimationEndListener_),this.element_.addEventListener("webkitTransitionEnd",this.removeAnimationEndListener_)},d.prototype.show=function(t){if(this.element_&&this.container_&&this.outline_){var e=this.element_.getBoundingClientRect().height,s=this.element_.getBoundingClientRect().width;this.container_.style.width=s+"px",this.container_.style.height=e+"px",this.outline_.style.width=s+"px",this.outline_.style.height=e+"px";for(var n=this.Constant_.TRANSITION_DURATION_SECONDS*this.Constant_.TRANSITION_DURATION_FRACTION,i=this.element_.querySelectorAll("."+this.CssClasses_.ITEM),o=0;o<i.length;o++){var a;a=this.element_.classList.contains(this.CssClasses_.TOP_LEFT)||this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)?(e-i[o].offsetTop-i[o].offsetHeight)/e*n+"s":i[o].offsetTop/e*n+"s",i[o].style.transitionDelay=a}this.applyClip_(e,s),window.requestAnimationFrame(function(){this.element_.classList.add(this.CssClasses_.IS_ANIMATING),this.element_.style.clip="rect(0 "+s+"px "+e+"px 0)",this.container_.classList.add(this.CssClasses_.IS_VISIBLE)}.bind(this)),this.addAnimationEndListener_();var r=function(e){e===t||this.closing_||e.target.parentNode===this.element_||(document.removeEventListener("click",r),this.hide())}.bind(this);document.addEventListener("click",r)}},d.prototype.show=d.prototype.show,d.prototype.hide=function(){if(this.element_&&this.container_&&this.outline_){for(var t=this.element_.querySelectorAll("."+this.CssClasses_.ITEM),e=0;e<t.length;e++)t[e].style.removeProperty("transition-delay");var s=this.element_.getBoundingClientRect(),n=s.height,i=s.width;this.element_.classList.add(this.CssClasses_.IS_ANIMATING),this.applyClip_(n,i),this.container_.classList.remove(this.CssClasses_.IS_VISIBLE),this.addAnimationEndListener_()}},d.prototype.hide=d.prototype.hide,d.prototype.toggle=function(t){this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)?this.hide():this.show(t)},d.prototype.toggle=d.prototype.toggle,s.register({constructor:d,classAsString:"MaterialMenu",cssClass:"mdl-js-menu",widget:!0});var h=function(t){this.element_=t,this.init()};window.MaterialProgress=h,h.prototype.Constant_={},h.prototype.CssClasses_={INDETERMINATE_CLASS:"mdl-progress__indeterminate"},h.prototype.setProgress=function(t){this.element_.classList.contains(this.CssClasses_.INDETERMINATE_CLASS)||(this.progressbar_.style.width=t+"%")},h.prototype.setProgress=h.prototype.setProgress,h.prototype.setBuffer=function(t){this.bufferbar_.style.width=t+"%",this.auxbar_.style.width=100-t+"%"},h.prototype.setBuffer=h.prototype.setBuffer,h.prototype.init=function(){if(this.element_){var t=document.createElement("div");t.className="progressbar bar bar1",this.element_.appendChild(t),this.progressbar_=t,(t=document.createElement("div")).className="bufferbar bar bar2",this.element_.appendChild(t),this.bufferbar_=t,(t=document.createElement("div")).className="auxbar bar bar3",this.element_.appendChild(t),this.auxbar_=t,this.progressbar_.style.width="0%",this.bufferbar_.style.width="100%",this.auxbar_.style.width="0%",this.element_.classList.add("is-upgraded")}},s.register({constructor:h,classAsString:"MaterialProgress",cssClass:"mdl-js-progress",widget:!0});var u=function(t){this.element_=t,this.init()};window.MaterialRadio=u,u.prototype.Constant_={TINY_TIMEOUT:.001},u.prototype.CssClasses_={IS_FOCUSED:"is-focused",IS_DISABLED:"is-disabled",IS_CHECKED:"is-checked",IS_UPGRADED:"is-upgraded",JS_RADIO:"mdl-js-radio",RADIO_BTN:"mdl-radio__button",RADIO_OUTER_CIRCLE:"mdl-radio__outer-circle",RADIO_INNER_CIRCLE:"mdl-radio__inner-circle",RIPPLE_EFFECT:"mdl-js-ripple-effect",RIPPLE_IGNORE_EVENTS:"mdl-js-ripple-effect--ignore-events",RIPPLE_CONTAINER:"mdl-radio__ripple-container",RIPPLE_CENTER:"mdl-ripple--center",RIPPLE:"mdl-ripple"},u.prototype.onChange_=function(t){for(var e=document.getElementsByClassName(this.CssClasses_.JS_RADIO),s=0;s<e.length;s++){e[s].querySelector("."+this.CssClasses_.RADIO_BTN).getAttribute("name")===this.btnElement_.getAttribute("name")&&void 0!==e[s].MaterialRadio&&e[s].MaterialRadio.updateClasses_()}},u.prototype.onFocus_=function(t){this.element_.classList.add(this.CssClasses_.IS_FOCUSED)},u.prototype.onBlur_=function(t){this.element_.classList.remove(this.CssClasses_.IS_FOCUSED)},u.prototype.onMouseup_=function(t){this.blur_()},u.prototype.updateClasses_=function(){this.checkDisabled(),this.checkToggleState()},u.prototype.blur_=function(){window.setTimeout(function(){this.btnElement_.blur()}.bind(this),this.Constant_.TINY_TIMEOUT)},u.prototype.checkDisabled=function(){this.btnElement_.disabled?this.element_.classList.add(this.CssClasses_.IS_DISABLED):this.element_.classList.remove(this.CssClasses_.IS_DISABLED)},u.prototype.checkDisabled=u.prototype.checkDisabled,u.prototype.checkToggleState=function(){this.btnElement_.checked?this.element_.classList.add(this.CssClasses_.IS_CHECKED):this.element_.classList.remove(this.CssClasses_.IS_CHECKED)},u.prototype.checkToggleState=u.prototype.checkToggleState,u.prototype.disable=function(){this.btnElement_.disabled=!0,this.updateClasses_()},u.prototype.disable=u.prototype.disable,u.prototype.enable=function(){this.btnElement_.disabled=!1,this.updateClasses_()},u.prototype.enable=u.prototype.enable,u.prototype.check=function(){this.btnElement_.checked=!0,this.onChange_(null)},u.prototype.check=u.prototype.check,u.prototype.uncheck=function(){this.btnElement_.checked=!1,this.onChange_(null)},u.prototype.uncheck=u.prototype.uncheck,u.prototype.init=function(){if(this.element_){this.btnElement_=this.element_.querySelector("."+this.CssClasses_.RADIO_BTN),this.boundChangeHandler_=this.onChange_.bind(this),this.boundFocusHandler_=this.onChange_.bind(this),this.boundBlurHandler_=this.onBlur_.bind(this),this.boundMouseUpHandler_=this.onMouseup_.bind(this);var t=document.createElement("span");t.classList.add(this.CssClasses_.RADIO_OUTER_CIRCLE);var e,s=document.createElement("span");if(s.classList.add(this.CssClasses_.RADIO_INNER_CIRCLE),this.element_.appendChild(t),this.element_.appendChild(s),this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)){this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS),(e=document.createElement("span")).classList.add(this.CssClasses_.RIPPLE_CONTAINER),e.classList.add(this.CssClasses_.RIPPLE_EFFECT),e.classList.add(this.CssClasses_.RIPPLE_CENTER),e.addEventListener("mouseup",this.boundMouseUpHandler_);var n=document.createElement("span");n.classList.add(this.CssClasses_.RIPPLE),e.appendChild(n),this.element_.appendChild(e)}this.btnElement_.addEventListener("change",this.boundChangeHandler_),this.btnElement_.addEventListener("focus",this.boundFocusHandler_),this.btnElement_.addEventListener("blur",this.boundBlurHandler_),this.element_.addEventListener("mouseup",this.boundMouseUpHandler_),this.updateClasses_(),this.element_.classList.add(this.CssClasses_.IS_UPGRADED)}},s.register({constructor:u,classAsString:"MaterialRadio",cssClass:"mdl-js-radio",widget:!0});var p=function(t){this.element_=t,this.isIE_=window.navigator.msPointerEnabled,this.init()};window.MaterialSlider=p,p.prototype.Constant_={},p.prototype.CssClasses_={IE_CONTAINER:"mdl-slider__ie-container",SLIDER_CONTAINER:"mdl-slider__container",BACKGROUND_FLEX:"mdl-slider__background-flex",BACKGROUND_LOWER:"mdl-slider__background-lower",BACKGROUND_UPPER:"mdl-slider__background-upper",IS_LOWEST_VALUE:"is-lowest-value",IS_UPGRADED:"is-upgraded"},p.prototype.onInput_=function(t){this.updateValueStyles_()},p.prototype.onChange_=function(t){this.updateValueStyles_()},p.prototype.onMouseUp_=function(t){t.target.blur()},p.prototype.onContainerMouseDown_=function(t){if(t.target===this.element_.parentElement){t.preventDefault();var e=new MouseEvent("mousedown",{target:t.target,buttons:t.buttons,clientX:t.clientX,clientY:this.element_.getBoundingClientRect().y});this.element_.dispatchEvent(e)}},p.prototype.updateValueStyles_=function(){var t=(this.element_.value-this.element_.min)/(this.element_.max-this.element_.min);0===t?this.element_.classList.add(this.CssClasses_.IS_LOWEST_VALUE):this.element_.classList.remove(this.CssClasses_.IS_LOWEST_VALUE),this.isIE_||(this.backgroundLower_.style.flex=t,this.backgroundLower_.style.webkitFlex=t,this.backgroundUpper_.style.flex=1-t,this.backgroundUpper_.style.webkitFlex=1-t)},p.prototype.disable=function(){this.element_.disabled=!0},p.prototype.disable=p.prototype.disable,p.prototype.enable=function(){this.element_.disabled=!1},p.prototype.enable=p.prototype.enable,p.prototype.change=function(t){void 0!==t&&(this.element_.value=t),this.updateValueStyles_()},p.prototype.change=p.prototype.change,p.prototype.init=function(){if(this.element_){if(this.isIE_){var t=document.createElement("div");t.classList.add(this.CssClasses_.IE_CONTAINER),this.element_.parentElement.insertBefore(t,this.element_),this.element_.parentElement.removeChild(this.element_),t.appendChild(this.element_)}else{var e=document.createElement("div");e.classList.add(this.CssClasses_.SLIDER_CONTAINER),this.element_.parentElement.insertBefore(e,this.element_),this.element_.parentElement.removeChild(this.element_),e.appendChild(this.element_);var s=document.createElement("div");s.classList.add(this.CssClasses_.BACKGROUND_FLEX),e.appendChild(s),this.backgroundLower_=document.createElement("div"),this.backgroundLower_.classList.add(this.CssClasses_.BACKGROUND_LOWER),s.appendChild(this.backgroundLower_),this.backgroundUpper_=document.createElement("div"),this.backgroundUpper_.classList.add(this.CssClasses_.BACKGROUND_UPPER),s.appendChild(this.backgroundUpper_)}this.boundInputHandler=this.onInput_.bind(this),this.boundChangeHandler=this.onChange_.bind(this),this.boundMouseUpHandler=this.onMouseUp_.bind(this),this.boundContainerMouseDownHandler=this.onContainerMouseDown_.bind(this),this.element_.addEventListener("input",this.boundInputHandler),this.element_.addEventListener("change",this.boundChangeHandler),this.element_.addEventListener("mouseup",this.boundMouseUpHandler),this.element_.parentElement.addEventListener("mousedown",this.boundContainerMouseDownHandler),this.updateValueStyles_(),this.element_.classList.add(this.CssClasses_.IS_UPGRADED)}},s.register({constructor:p,classAsString:"MaterialSlider",cssClass:"mdl-js-slider",widget:!0});var _=function(t){if(this.element_=t,this.textElement_=this.element_.querySelector("."+this.cssClasses_.MESSAGE),this.actionElement_=this.element_.querySelector("."+this.cssClasses_.ACTION),!this.textElement_)throw new Error("There must be a message element for a snackbar.");if(!this.actionElement_)throw new Error("There must be an action element for a snackbar.");this.active=!1,this.actionHandler_=void 0,this.message_=void 0,this.actionText_=void 0,this.queuedNotifications_=[],this.setActionHidden_(!0)};window.MaterialSnackbar=_,_.prototype.Constant_={ANIMATION_LENGTH:250},_.prototype.cssClasses_={SNACKBAR:"mdl-snackbar",MESSAGE:"mdl-snackbar__text",ACTION:"mdl-snackbar__action",ACTIVE:"mdl-snackbar--active"},_.prototype.displaySnackbar_=function(){this.element_.setAttribute("aria-hidden","true"),this.actionHandler_&&(this.actionElement_.textContent=this.actionText_,this.actionElement_.addEventListener("click",this.actionHandler_),this.setActionHidden_(!1)),this.textElement_.textContent=this.message_,this.element_.classList.add(this.cssClasses_.ACTIVE),this.element_.setAttribute("aria-hidden","false"),setTimeout(this.cleanup_.bind(this),this.timeout_)},_.prototype.showSnackbar=function(t){if(void 0===t)throw new Error("Please provide a data object with at least a message to display.");if(void 0===t.message)throw new Error("Please provide a message to be displayed.");if(t.actionHandler&&!t.actionText)throw new Error("Please provide action text with the handler.");this.active?this.queuedNotifications_.push(t):(this.active=!0,this.message_=t.message,t.timeout?this.timeout_=t.timeout:this.timeout_=2750,t.actionHandler&&(this.actionHandler_=t.actionHandler),t.actionText&&(this.actionText_=t.actionText),this.displaySnackbar_())},_.prototype.showSnackbar=_.prototype.showSnackbar,_.prototype.checkQueue_=function(){this.queuedNotifications_.length>0&&this.showSnackbar(this.queuedNotifications_.shift())},_.prototype.cleanup_=function(){this.element_.classList.remove(this.cssClasses_.ACTIVE),setTimeout(function(){this.element_.setAttribute("aria-hidden","true"),this.textElement_.textContent="",Boolean(this.actionElement_.getAttribute("aria-hidden"))||(this.setActionHidden_(!0),this.actionElement_.textContent="",this.actionElement_.removeEventListener("click",this.actionHandler_)),this.actionHandler_=void 0,this.message_=void 0,this.actionText_=void 0,this.active=!1,this.checkQueue_()}.bind(this),this.Constant_.ANIMATION_LENGTH)},_.prototype.setActionHidden_=function(t){t?this.actionElement_.setAttribute("aria-hidden","true"):this.actionElement_.removeAttribute("aria-hidden")},s.register({constructor:_,classAsString:"MaterialSnackbar",cssClass:"mdl-js-snackbar",widget:!0});var m=function(t){this.element_=t,this.init()};window.MaterialSpinner=m,m.prototype.Constant_={MDL_SPINNER_LAYER_COUNT:4},m.prototype.CssClasses_={MDL_SPINNER_LAYER:"mdl-spinner__layer",MDL_SPINNER_CIRCLE_CLIPPER:"mdl-spinner__circle-clipper",MDL_SPINNER_CIRCLE:"mdl-spinner__circle",MDL_SPINNER_GAP_PATCH:"mdl-spinner__gap-patch",MDL_SPINNER_LEFT:"mdl-spinner__left",MDL_SPINNER_RIGHT:"mdl-spinner__right"},m.prototype.createLayer=function(t){var e=document.createElement("div");e.classList.add(this.CssClasses_.MDL_SPINNER_LAYER),e.classList.add(this.CssClasses_.MDL_SPINNER_LAYER+"-"+t);var s=document.createElement("div");s.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER),s.classList.add(this.CssClasses_.MDL_SPINNER_LEFT);var n=document.createElement("div");n.classList.add(this.CssClasses_.MDL_SPINNER_GAP_PATCH);var i=document.createElement("div");i.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER),i.classList.add(this.CssClasses_.MDL_SPINNER_RIGHT);for(var o=[s,n,i],a=0;a<o.length;a++){var r=document.createElement("div");r.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE),o[a].appendChild(r)}e.appendChild(s),e.appendChild(n),e.appendChild(i),this.element_.appendChild(e)},m.prototype.createLayer=m.prototype.createLayer,m.prototype.stop=function(){this.element_.classList.remove("is-active")},m.prototype.stop=m.prototype.stop,m.prototype.start=function(){this.element_.classList.add("is-active")},m.prototype.start=m.prototype.start,m.prototype.init=function(){if(this.element_){for(var t=1;t<=this.Constant_.MDL_SPINNER_LAYER_COUNT;t++)this.createLayer(t);this.element_.classList.add("is-upgraded")}},s.register({constructor:m,classAsString:"MaterialSpinner",cssClass:"mdl-js-spinner",widget:!0});var f=function(t){this.element_=t,this.init()};window.MaterialSwitch=f,f.prototype.Constant_={TINY_TIMEOUT:.001},f.prototype.CssClasses_={INPUT:"mdl-switch__input",TRACK:"mdl-switch__track",THUMB:"mdl-switch__thumb",FOCUS_HELPER:"mdl-switch__focus-helper",RIPPLE_EFFECT:"mdl-js-ripple-effect",RIPPLE_IGNORE_EVENTS:"mdl-js-ripple-effect--ignore-events",RIPPLE_CONTAINER:"mdl-switch__ripple-container",RIPPLE_CENTER:"mdl-ripple--center",RIPPLE:"mdl-ripple",IS_FOCUSED:"is-focused",IS_DISABLED:"is-disabled",IS_CHECKED:"is-checked"},f.prototype.onChange_=function(t){this.updateClasses_()},f.prototype.onFocus_=function(t){this.element_.classList.add(this.CssClasses_.IS_FOCUSED)},f.prototype.onBlur_=function(t){this.element_.classList.remove(this.CssClasses_.IS_FOCUSED)},f.prototype.onMouseUp_=function(t){this.blur_()},f.prototype.updateClasses_=function(){this.checkDisabled(),this.checkToggleState()},f.prototype.blur_=function(){window.setTimeout(function(){this.inputElement_.blur()}.bind(this),this.Constant_.TINY_TIMEOUT)},f.prototype.checkDisabled=function(){this.inputElement_.disabled?this.element_.classList.add(this.CssClasses_.IS_DISABLED):this.element_.classList.remove(this.CssClasses_.IS_DISABLED)},f.prototype.checkDisabled=f.prototype.checkDisabled,f.prototype.checkToggleState=function(){this.inputElement_.checked?this.element_.classList.add(this.CssClasses_.IS_CHECKED):this.element_.classList.remove(this.CssClasses_.IS_CHECKED)},f.prototype.checkToggleState=f.prototype.checkToggleState,f.prototype.disable=function(){this.inputElement_.disabled=!0,this.updateClasses_()},f.prototype.disable=f.prototype.disable,f.prototype.enable=function(){this.inputElement_.disabled=!1,this.updateClasses_()},f.prototype.enable=f.prototype.enable,f.prototype.on=function(){this.inputElement_.checked=!0,this.updateClasses_()},f.prototype.on=f.prototype.on,f.prototype.off=function(){this.inputElement_.checked=!1,this.updateClasses_()},f.prototype.off=f.prototype.off,f.prototype.init=function(){if(this.element_){this.inputElement_=this.element_.querySelector("."+this.CssClasses_.INPUT);var t=document.createElement("div");t.classList.add(this.CssClasses_.TRACK);var e=document.createElement("div");e.classList.add(this.CssClasses_.THUMB);var s=document.createElement("span");if(s.classList.add(this.CssClasses_.FOCUS_HELPER),e.appendChild(s),this.element_.appendChild(t),this.element_.appendChild(e),this.boundMouseUpHandler=this.onMouseUp_.bind(this),this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)){this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS),this.rippleContainerElement_=document.createElement("span"),this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER),this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_EFFECT),this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER),this.rippleContainerElement_.addEventListener("mouseup",this.boundMouseUpHandler);var n=document.createElement("span");n.classList.add(this.CssClasses_.RIPPLE),this.rippleContainerElement_.appendChild(n),this.element_.appendChild(this.rippleContainerElement_)}this.boundChangeHandler=this.onChange_.bind(this),this.boundFocusHandler=this.onFocus_.bind(this),this.boundBlurHandler=this.onBlur_.bind(this),this.inputElement_.addEventListener("change",this.boundChangeHandler),this.inputElement_.addEventListener("focus",this.boundFocusHandler),this.inputElement_.addEventListener("blur",this.boundBlurHandler),this.element_.addEventListener("mouseup",this.boundMouseUpHandler),this.updateClasses_(),this.element_.classList.add("is-upgraded")}},s.register({constructor:f,classAsString:"MaterialSwitch",cssClass:"mdl-js-switch",widget:!0});var C=function(t){this.element_=t,this.init()};window.MaterialTabs=C,C.prototype.Constant_={},C.prototype.CssClasses_={TAB_CLASS:"mdl-tabs__tab",PANEL_CLASS:"mdl-tabs__panel",ACTIVE_CLASS:"is-active",UPGRADED_CLASS:"is-upgraded",MDL_JS_RIPPLE_EFFECT:"mdl-js-ripple-effect",MDL_RIPPLE_CONTAINER:"mdl-tabs__ripple-container",MDL_RIPPLE:"mdl-ripple",MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS:"mdl-js-ripple-effect--ignore-events"},C.prototype.initTabs_=function(){this.element_.classList.contains(this.CssClasses_.MDL_JS_RIPPLE_EFFECT)&&this.element_.classList.add(this.CssClasses_.MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS),this.tabs_=this.element_.querySelectorAll("."+this.CssClasses_.TAB_CLASS),this.panels_=this.element_.querySelectorAll("."+this.CssClasses_.PANEL_CLASS);for(var e=0;e<this.tabs_.length;e++)new t(this.tabs_[e],this);this.element_.classList.add(this.CssClasses_.UPGRADED_CLASS)},C.prototype.resetTabState_=function(){for(var t=0;t<this.tabs_.length;t++)this.tabs_[t].classList.remove(this.CssClasses_.ACTIVE_CLASS)},C.prototype.resetPanelState_=function(){for(var t=0;t<this.panels_.length;t++)this.panels_[t].classList.remove(this.CssClasses_.ACTIVE_CLASS)},C.prototype.init=function(){this.element_&&this.initTabs_()},s.register({constructor:C,classAsString:"MaterialTabs",cssClass:"mdl-js-tabs"});var E=function(t){this.element_=t,this.maxRows=this.Constant_.NO_MAX_ROWS,this.init()};window.MaterialTextfield=E,E.prototype.Constant_={NO_MAX_ROWS:-1,MAX_ROWS_ATTRIBUTE:"maxrows"},E.prototype.CssClasses_={LABEL:"mdl-textfield__label",INPUT:"mdl-textfield__input",IS_DIRTY:"is-dirty",IS_FOCUSED:"is-focused",IS_DISABLED:"is-disabled",IS_INVALID:"is-invalid",IS_UPGRADED:"is-upgraded",HAS_PLACEHOLDER:"has-placeholder"},E.prototype.onKeyDown_=function(t){var e=t.target.value.split("\n").length;13===t.keyCode&&e>=this.maxRows&&t.preventDefault()},E.prototype.onFocus_=function(t){this.element_.classList.add(this.CssClasses_.IS_FOCUSED)},E.prototype.onBlur_=function(t){this.element_.classList.remove(this.CssClasses_.IS_FOCUSED)},E.prototype.onReset_=function(t){this.updateClasses_()},E.prototype.updateClasses_=function(){this.checkDisabled(),this.checkValidity(),this.checkDirty(),this.checkFocus()},E.prototype.checkDisabled=function(){this.input_.disabled?this.element_.classList.add(this.CssClasses_.IS_DISABLED):this.element_.classList.remove(this.CssClasses_.IS_DISABLED)},E.prototype.checkDisabled=E.prototype.checkDisabled,E.prototype.checkFocus=function(){Boolean(this.element_.querySelector(":focus"))?this.element_.classList.add(this.CssClasses_.IS_FOCUSED):this.element_.classList.remove(this.CssClasses_.IS_FOCUSED)},E.prototype.checkFocus=E.prototype.checkFocus,E.prototype.checkValidity=function(){this.input_.validity&&(this.input_.validity.valid?this.element_.classList.remove(this.CssClasses_.IS_INVALID):this.element_.classList.add(this.CssClasses_.IS_INVALID))},E.prototype.checkValidity=E.prototype.checkValidity,E.prototype.checkDirty=function(){this.input_.value&&this.input_.value.length>0?this.element_.classList.add(this.CssClasses_.IS_DIRTY):this.element_.classList.remove(this.CssClasses_.IS_DIRTY)},E.prototype.checkDirty=E.prototype.checkDirty,E.prototype.disable=function(){this.input_.disabled=!0,this.updateClasses_()},E.prototype.disable=E.prototype.disable,E.prototype.enable=function(){this.input_.disabled=!1,this.updateClasses_()},E.prototype.enable=E.prototype.enable,E.prototype.change=function(t){this.input_.value=t||"",this.updateClasses_()},E.prototype.change=E.prototype.change,E.prototype.init=function(){if(this.element_&&(this.label_=this.element_.querySelector("."+this.CssClasses_.LABEL),this.input_=this.element_.querySelector("."+this.CssClasses_.INPUT),this.input_)){this.input_.hasAttribute(this.Constant_.MAX_ROWS_ATTRIBUTE)&&(this.maxRows=parseInt(this.input_.getAttribute(this.Constant_.MAX_ROWS_ATTRIBUTE),10),isNaN(this.maxRows)&&(this.maxRows=this.Constant_.NO_MAX_ROWS)),this.input_.hasAttribute("placeholder")&&this.element_.classList.add(this.CssClasses_.HAS_PLACEHOLDER),this.boundUpdateClassesHandler=this.updateClasses_.bind(this),this.boundFocusHandler=this.onFocus_.bind(this),this.boundBlurHandler=this.onBlur_.bind(this),this.boundResetHandler=this.onReset_.bind(this),this.input_.addEventListener("input",this.boundUpdateClassesHandler),this.input_.addEventListener("focus",this.boundFocusHandler),this.input_.addEventListener("blur",this.boundBlurHandler),this.input_.addEventListener("reset",this.boundResetHandler),this.maxRows!==this.Constant_.NO_MAX_ROWS&&(this.boundKeyDownHandler=this.onKeyDown_.bind(this),this.input_.addEventListener("keydown",this.boundKeyDownHandler));var t=this.element_.classList.contains(this.CssClasses_.IS_INVALID);this.updateClasses_(),this.element_.classList.add(this.CssClasses_.IS_UPGRADED),t&&this.element_.classList.add(this.CssClasses_.IS_INVALID),this.input_.hasAttribute("autofocus")&&(this.element_.focus(),this.checkFocus())}},s.register({constructor:E,classAsString:"MaterialTextfield",cssClass:"mdl-js-textfield",widget:!0});var g=function(t){this.element_=t,this.init()};window.MaterialTooltip=g,g.prototype.Constant_={},g.prototype.CssClasses_={IS_ACTIVE:"is-active",BOTTOM:"mdl-tooltip--bottom",LEFT:"mdl-tooltip--left",RIGHT:"mdl-tooltip--right",TOP:"mdl-tooltip--top"},g.prototype.handleMouseEnter_=function(t){var e=t.target.getBoundingClientRect(),s=e.left+e.width/2,n=e.top+e.height/2,i=this.element_.offsetWidth/2*-1,o=this.element_.offsetHeight/2*-1;this.element_.classList.contains(this.CssClasses_.LEFT)||this.element_.classList.contains(this.CssClasses_.RIGHT)?(s=e.width/2,n+o<0?(this.element_.style.top="0",this.element_.style.marginTop="0"):(this.element_.style.top=n+"px",this.element_.style.marginTop=o+"px")):s+i<0?(this.element_.style.left="0",this.element_.style.marginLeft="0"):(this.element_.style.left=s+"px",this.element_.style.marginLeft=i+"px"),this.element_.classList.contains(this.CssClasses_.TOP)?this.element_.style.top=e.top-this.element_.offsetHeight-10+"px":this.element_.classList.contains(this.CssClasses_.RIGHT)?this.element_.style.left=e.left+e.width+10+"px":this.element_.classList.contains(this.CssClasses_.LEFT)?this.element_.style.left=e.left-this.element_.offsetWidth-10+"px":this.element_.style.top=e.top+e.height+10+"px",this.element_.classList.add(this.CssClasses_.IS_ACTIVE)},g.prototype.hideTooltip_=function(){this.element_.classList.remove(this.CssClasses_.IS_ACTIVE)},g.prototype.init=function(){if(this.element_){var t=this.element_.getAttribute("for")||this.element_.getAttribute("data-mdl-for");t&&(this.forElement_=document.getElementById(t)),this.forElement_&&(this.forElement_.hasAttribute("tabindex")||this.forElement_.setAttribute("tabindex","0"),this.boundMouseEnterHandler=this.handleMouseEnter_.bind(this),this.boundMouseLeaveAndScrollHandler=this.hideTooltip_.bind(this),this.forElement_.addEventListener("mouseenter",this.boundMouseEnterHandler,!1),this.forElement_.addEventListener("touchend",this.boundMouseEnterHandler,!1),this.forElement_.addEventListener("mouseleave",this.boundMouseLeaveAndScrollHandler,!1),window.addEventListener("scroll",this.boundMouseLeaveAndScrollHandler,!0),window.addEventListener("touchstart",this.boundMouseLeaveAndScrollHandler))}},s.register({constructor:g,classAsString:"MaterialTooltip",cssClass:"mdl-tooltip"});var v=function(t){this.element_=t,this.init()};window.MaterialLayout=v,v.prototype.Constant_={MAX_WIDTH:"(max-width: 1024px)",TAB_SCROLL_PIXELS:100,RESIZE_TIMEOUT:100,MENU_ICON:"&#xE5D2;",CHEVRON_LEFT:"chevron_left",CHEVRON_RIGHT:"chevron_right"},v.prototype.Keycodes_={ENTER:13,ESCAPE:27,SPACE:32},v.prototype.Mode_={STANDARD:0,SEAMED:1,WATERFALL:2,SCROLL:3},v.prototype.CssClasses_={CONTAINER:"mdl-layout__container",HEADER:"mdl-layout__header",DRAWER:"mdl-layout__drawer",CONTENT:"mdl-layout__content",DRAWER_BTN:"mdl-layout__drawer-button",ICON:"material-icons",JS_RIPPLE_EFFECT:"mdl-js-ripple-effect",RIPPLE_CONTAINER:"mdl-layout__tab-ripple-container",RIPPLE:"mdl-ripple",RIPPLE_IGNORE_EVENTS:"mdl-js-ripple-effect--ignore-events",HEADER_SEAMED:"mdl-layout__header--seamed",HEADER_WATERFALL:"mdl-layout__header--waterfall",HEADER_SCROLL:"mdl-layout__header--scroll",FIXED_HEADER:"mdl-layout--fixed-header",OBFUSCATOR:"mdl-layout__obfuscator",TAB_BAR:"mdl-layout__tab-bar",TAB_CONTAINER:"mdl-layout__tab-bar-container",TAB:"mdl-layout__tab",TAB_BAR_BUTTON:"mdl-layout__tab-bar-button",TAB_BAR_LEFT_BUTTON:"mdl-layout__tab-bar-left-button",TAB_BAR_RIGHT_BUTTON:"mdl-layout__tab-bar-right-button",TAB_MANUAL_SWITCH:"mdl-layout__tab-manual-switch",PANEL:"mdl-layout__tab-panel",HAS_DRAWER:"has-drawer",HAS_TABS:"has-tabs",HAS_SCROLLING_HEADER:"has-scrolling-header",CASTING_SHADOW:"is-casting-shadow",IS_COMPACT:"is-compact",IS_SMALL_SCREEN:"is-small-screen",IS_DRAWER_OPEN:"is-visible",IS_ACTIVE:"is-active",IS_UPGRADED:"is-upgraded",IS_ANIMATING:"is-animating",ON_LARGE_SCREEN:"mdl-layout--large-screen-only",ON_SMALL_SCREEN:"mdl-layout--small-screen-only"},v.prototype.contentScrollHandler_=function(){if(!this.header_.classList.contains(this.CssClasses_.IS_ANIMATING)){var t=!this.element_.classList.contains(this.CssClasses_.IS_SMALL_SCREEN)||this.element_.classList.contains(this.CssClasses_.FIXED_HEADER);this.content_.scrollTop>0&&!this.header_.classList.contains(this.CssClasses_.IS_COMPACT)?(this.header_.classList.add(this.CssClasses_.CASTING_SHADOW),this.header_.classList.add(this.CssClasses_.IS_COMPACT),t&&this.header_.classList.add(this.CssClasses_.IS_ANIMATING)):this.content_.scrollTop<=0&&this.header_.classList.contains(this.CssClasses_.IS_COMPACT)&&(this.header_.classList.remove(this.CssClasses_.CASTING_SHADOW),this.header_.classList.remove(this.CssClasses_.IS_COMPACT),t&&this.header_.classList.add(this.CssClasses_.IS_ANIMATING))}},v.prototype.keyboardEventHandler_=function(t){t.keyCode===this.Keycodes_.ESCAPE&&this.drawer_.classList.contains(this.CssClasses_.IS_DRAWER_OPEN)&&this.toggleDrawer()},v.prototype.screenSizeHandler_=function(){this.screenSizeMediaQuery_.matches?this.element_.classList.add(this.CssClasses_.IS_SMALL_SCREEN):(this.element_.classList.remove(this.CssClasses_.IS_SMALL_SCREEN),this.drawer_&&(this.drawer_.classList.remove(this.CssClasses_.IS_DRAWER_OPEN),this.obfuscator_.classList.remove(this.CssClasses_.IS_DRAWER_OPEN)))},v.prototype.drawerToggleHandler_=function(t){if(t&&"keydown"===t.type){if(t.keyCode!==this.Keycodes_.SPACE&&t.keyCode!==this.Keycodes_.ENTER)return;t.preventDefault()}this.toggleDrawer()},v.prototype.headerTransitionEndHandler_=function(){this.header_.classList.remove(this.CssClasses_.IS_ANIMATING)},v.prototype.headerClickHandler_=function(){this.header_.classList.contains(this.CssClasses_.IS_COMPACT)&&(this.header_.classList.remove(this.CssClasses_.IS_COMPACT),this.header_.classList.add(this.CssClasses_.IS_ANIMATING))},v.prototype.resetTabState_=function(t){for(var e=0;e<t.length;e++)t[e].classList.remove(this.CssClasses_.IS_ACTIVE)},v.prototype.resetPanelState_=function(t){for(var e=0;e<t.length;e++)t[e].classList.remove(this.CssClasses_.IS_ACTIVE)},v.prototype.toggleDrawer=function(){var t=this.element_.querySelector("."+this.CssClasses_.DRAWER_BTN);this.drawer_.classList.toggle(this.CssClasses_.IS_DRAWER_OPEN),this.obfuscator_.classList.toggle(this.CssClasses_.IS_DRAWER_OPEN),this.drawer_.classList.contains(this.CssClasses_.IS_DRAWER_OPEN)?(this.drawer_.setAttribute("aria-hidden","false"),t.setAttribute("aria-expanded","true")):(this.drawer_.setAttribute("aria-hidden","true"),t.setAttribute("aria-expanded","false"))},v.prototype.toggleDrawer=v.prototype.toggleDrawer,v.prototype.init=function(){if(this.element_){var t=document.createElement("div");t.classList.add(this.CssClasses_.CONTAINER);var s=this.element_.querySelector(":focus");this.element_.parentElement.insertBefore(t,this.element_),this.element_.parentElement.removeChild(this.element_),t.appendChild(this.element_),s&&s.focus();for(var n=this.element_.childNodes,i=n.length,o=0;o<i;o++){var a=n[o];a.classList&&a.classList.contains(this.CssClasses_.HEADER)&&(this.header_=a),a.classList&&a.classList.contains(this.CssClasses_.DRAWER)&&(this.drawer_=a),a.classList&&a.classList.contains(this.CssClasses_.CONTENT)&&(this.content_=a)}window.addEventListener("pageshow",function(t){t.persisted&&(this.element_.style.overflowY="hidden",requestAnimationFrame(function(){this.element_.style.overflowY=""}.bind(this)))}.bind(this),!1),this.header_&&(this.tabBar_=this.header_.querySelector("."+this.CssClasses_.TAB_BAR));var r=this.Mode_.STANDARD;if(this.header_&&(this.header_.classList.contains(this.CssClasses_.HEADER_SEAMED)?r=this.Mode_.SEAMED:this.header_.classList.contains(this.CssClasses_.HEADER_WATERFALL)?(r=this.Mode_.WATERFALL,this.header_.addEventListener("transitionend",this.headerTransitionEndHandler_.bind(this)),this.header_.addEventListener("click",this.headerClickHandler_.bind(this))):this.header_.classList.contains(this.CssClasses_.HEADER_SCROLL)&&(r=this.Mode_.SCROLL,t.classList.add(this.CssClasses_.HAS_SCROLLING_HEADER)),r===this.Mode_.STANDARD?(this.header_.classList.add(this.CssClasses_.CASTING_SHADOW),this.tabBar_&&this.tabBar_.classList.add(this.CssClasses_.CASTING_SHADOW)):r===this.Mode_.SEAMED||r===this.Mode_.SCROLL?(this.header_.classList.remove(this.CssClasses_.CASTING_SHADOW),this.tabBar_&&this.tabBar_.classList.remove(this.CssClasses_.CASTING_SHADOW)):r===this.Mode_.WATERFALL&&(this.content_.addEventListener("scroll",this.contentScrollHandler_.bind(this)),this.contentScrollHandler_())),this.drawer_){var l=this.element_.querySelector("."+this.CssClasses_.DRAWER_BTN);if(!l){(l=document.createElement("div")).setAttribute("aria-expanded","false"),l.setAttribute("role","button"),l.setAttribute("tabindex","0"),l.classList.add(this.CssClasses_.DRAWER_BTN);var c=document.createElement("i");c.classList.add(this.CssClasses_.ICON),c.innerHTML=this.Constant_.MENU_ICON,l.appendChild(c)}this.drawer_.classList.contains(this.CssClasses_.ON_LARGE_SCREEN)?l.classList.add(this.CssClasses_.ON_LARGE_SCREEN):this.drawer_.classList.contains(this.CssClasses_.ON_SMALL_SCREEN)&&l.classList.add(this.CssClasses_.ON_SMALL_SCREEN),l.addEventListener("click",this.drawerToggleHandler_.bind(this)),l.addEventListener("keydown",this.drawerToggleHandler_.bind(this)),this.element_.classList.add(this.CssClasses_.HAS_DRAWER),this.element_.classList.contains(this.CssClasses_.FIXED_HEADER)?this.header_.insertBefore(l,this.header_.firstChild):this.element_.insertBefore(l,this.content_);var d=document.createElement("div");d.classList.add(this.CssClasses_.OBFUSCATOR),this.element_.appendChild(d),d.addEventListener("click",this.drawerToggleHandler_.bind(this)),this.obfuscator_=d,this.drawer_.addEventListener("keydown",this.keyboardEventHandler_.bind(this)),this.drawer_.setAttribute("aria-hidden","true")}if(this.screenSizeMediaQuery_=window.matchMedia(this.Constant_.MAX_WIDTH),this.screenSizeMediaQuery_.addListener(this.screenSizeHandler_.bind(this)),this.screenSizeHandler_(),this.header_&&this.tabBar_){this.element_.classList.add(this.CssClasses_.HAS_TABS);var h=document.createElement("div");h.classList.add(this.CssClasses_.TAB_CONTAINER),this.header_.insertBefore(h,this.tabBar_),this.header_.removeChild(this.tabBar_);var u=document.createElement("div");u.classList.add(this.CssClasses_.TAB_BAR_BUTTON),u.classList.add(this.CssClasses_.TAB_BAR_LEFT_BUTTON);var p=document.createElement("i");p.classList.add(this.CssClasses_.ICON),p.textContent=this.Constant_.CHEVRON_LEFT,u.appendChild(p),u.addEventListener("click",function(){this.tabBar_.scrollLeft-=this.Constant_.TAB_SCROLL_PIXELS}.bind(this));var _=document.createElement("div");_.classList.add(this.CssClasses_.TAB_BAR_BUTTON),_.classList.add(this.CssClasses_.TAB_BAR_RIGHT_BUTTON);var m=document.createElement("i");m.classList.add(this.CssClasses_.ICON),m.textContent=this.Constant_.CHEVRON_RIGHT,_.appendChild(m),_.addEventListener("click",function(){this.tabBar_.scrollLeft+=this.Constant_.TAB_SCROLL_PIXELS}.bind(this)),h.appendChild(u),h.appendChild(this.tabBar_),h.appendChild(_);var f=function(){this.tabBar_.scrollLeft>0?u.classList.add(this.CssClasses_.IS_ACTIVE):u.classList.remove(this.CssClasses_.IS_ACTIVE),this.tabBar_.scrollLeft<this.tabBar_.scrollWidth-this.tabBar_.offsetWidth?_.classList.add(this.CssClasses_.IS_ACTIVE):_.classList.remove(this.CssClasses_.IS_ACTIVE)}.bind(this);this.tabBar_.addEventListener("scroll",f),f();var C=function(){this.resizeTimeoutId_&&clearTimeout(this.resizeTimeoutId_),this.resizeTimeoutId_=setTimeout(function(){f(),this.resizeTimeoutId_=null}.bind(this),this.Constant_.RESIZE_TIMEOUT)}.bind(this);window.addEventListener("resize",C),this.tabBar_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)&&this.tabBar_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);for(var E=this.tabBar_.querySelectorAll("."+this.CssClasses_.TAB),g=this.content_.querySelectorAll("."+this.CssClasses_.PANEL),v=0;v<E.length;v++)new e(E[v],E,g,this)}this.element_.classList.add(this.CssClasses_.IS_UPGRADED)}},window.MaterialLayoutTab=e,s.register({constructor:v,classAsString:"MaterialLayout",cssClass:"mdl-js-layout"});var b=function(t){this.element_=t,this.init()};window.MaterialDataTable=b,b.prototype.Constant_={},b.prototype.CssClasses_={DATA_TABLE:"mdl-data-table",SELECTABLE:"mdl-data-table--selectable",SELECT_ELEMENT:"mdl-data-table__select",IS_SELECTED:"is-selected",IS_UPGRADED:"is-upgraded"},b.prototype.selectRow_=function(t,e,s){return e?function(){t.checked?e.classList.add(this.CssClasses_.IS_SELECTED):e.classList.remove(this.CssClasses_.IS_SELECTED)}.bind(this):s?function(){var e;if(t.checked)for(e=0;e<s.length;e++)s[e].querySelector("td").querySelector(".mdl-checkbox").MaterialCheckbox.check(),s[e].classList.add(this.CssClasses_.IS_SELECTED);else for(e=0;e<s.length;e++)s[e].querySelector("td").querySelector(".mdl-checkbox").MaterialCheckbox.uncheck(),s[e].classList.remove(this.CssClasses_.IS_SELECTED)}.bind(this):void 0},b.prototype.createCheckbox_=function(t,e){var n=document.createElement("label"),i=["mdl-checkbox","mdl-js-checkbox","mdl-js-ripple-effect",this.CssClasses_.SELECT_ELEMENT];n.className=i.join(" ");var o=document.createElement("input");return o.type="checkbox",o.classList.add("mdl-checkbox__input"),t?(o.checked=t.classList.contains(this.CssClasses_.IS_SELECTED),o.addEventListener("change",this.selectRow_(o,t))):e&&o.addEventListener("change",this.selectRow_(o,null,e)),n.appendChild(o),s.upgradeElement(n,"MaterialCheckbox"),n},b.prototype.init=function(){if(this.element_){var t=this.element_.querySelector("th"),e=Array.prototype.slice.call(this.element_.querySelectorAll("tbody tr")),s=Array.prototype.slice.call(this.element_.querySelectorAll("tfoot tr")),n=e.concat(s);if(this.element_.classList.contains(this.CssClasses_.SELECTABLE)){var i=document.createElement("th"),o=this.createCheckbox_(null,n);i.appendChild(o),t.parentElement.insertBefore(i,t);for(var a=0;a<n.length;a++){var r=n[a].querySelector("td");if(r){var l=document.createElement("td");if("TBODY"===n[a].parentNode.nodeName.toUpperCase()){var c=this.createCheckbox_(n[a]);l.appendChild(c)}n[a].insertBefore(l,r)}}this.element_.classList.add(this.CssClasses_.IS_UPGRADED)}}},s.register({constructor:b,classAsString:"MaterialDataTable",cssClass:"mdl-js-data-table"});var y=function(t){this.element_=t,this.init()};window.MaterialRipple=y,y.prototype.Constant_={INITIAL_SCALE:"scale(0.0001, 0.0001)",INITIAL_SIZE:"1px",INITIAL_OPACITY:"0.4",FINAL_OPACITY:"0",FINAL_SCALE:""},y.prototype.CssClasses_={RIPPLE_CENTER:"mdl-ripple--center",RIPPLE_EFFECT_IGNORE_EVENTS:"mdl-js-ripple-effect--ignore-events",RIPPLE:"mdl-ripple",IS_ANIMATING:"is-animating",IS_VISIBLE:"is-visible"},y.prototype.downHandler_=function(t){if(!this.rippleElement_.style.width&&!this.rippleElement_.style.height){var e=this.element_.getBoundingClientRect();this.boundHeight=e.height,this.boundWidth=e.width,this.rippleSize_=2*Math.sqrt(e.width*e.width+e.height*e.height)+2,this.rippleElement_.style.width=this.rippleSize_+"px",this.rippleElement_.style.height=this.rippleSize_+"px"}if(this.rippleElement_.classList.add(this.CssClasses_.IS_VISIBLE),"mousedown"===t.type&&this.ignoringMouseDown_)this.ignoringMouseDown_=!1;else{if("touchstart"===t.type&&(this.ignoringMouseDown_=!0),this.getFrameCount()>0)return;this.setFrameCount(1);var s,n,i=t.currentTarget.getBoundingClientRect();if(0===t.clientX&&0===t.clientY)s=Math.round(i.width/2),n=Math.round(i.height/2);else{var o=void 0!==t.clientX?t.clientX:t.touches[0].clientX,a=void 0!==t.clientY?t.clientY:t.touches[0].clientY;s=Math.round(o-i.left),n=Math.round(a-i.top)}this.setRippleXY(s,n),this.setRippleStyles(!0),window.requestAnimationFrame(this.animFrameHandler.bind(this))}},y.prototype.upHandler_=function(t){t&&2!==t.detail&&window.setTimeout(function(){this.rippleElement_.classList.remove(this.CssClasses_.IS_VISIBLE)}.bind(this),0)},y.prototype.init=function(){if(this.element_){var t=this.element_.classList.contains(this.CssClasses_.RIPPLE_CENTER);this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT_IGNORE_EVENTS)||(this.rippleElement_=this.element_.querySelector("."+this.CssClasses_.RIPPLE),this.frameCount_=0,this.rippleSize_=0,this.x_=0,this.y_=0,this.ignoringMouseDown_=!1,this.boundDownHandler=this.downHandler_.bind(this),this.element_.addEventListener("mousedown",this.boundDownHandler),this.element_.addEventListener("touchstart",this.boundDownHandler),this.boundUpHandler=this.upHandler_.bind(this),this.element_.addEventListener("mouseup",this.boundUpHandler),this.element_.addEventListener("mouseleave",this.boundUpHandler),this.element_.addEventListener("touchend",this.boundUpHandler),this.element_.addEventListener("blur",this.boundUpHandler),this.getFrameCount=function(){return this.frameCount_},this.setFrameCount=function(t){this.frameCount_=t},this.getRippleElement=function(){return this.rippleElement_},this.setRippleXY=function(t,e){this.x_=t,this.y_=e},this.setRippleStyles=function(e){if(null!==this.rippleElement_){var s,n,i="translate("+this.x_+"px, "+this.y_+"px)";e?(n=this.Constant_.INITIAL_SCALE,this.Constant_.INITIAL_SIZE):(n=this.Constant_.FINAL_SCALE,this.rippleSize_+"px",t&&(i="translate("+this.boundWidth/2+"px, "+this.boundHeight/2+"px)")),s="translate(-50%, -50%) "+i+n,this.rippleElement_.style.webkitTransform=s,this.rippleElement_.style.msTransform=s,this.rippleElement_.style.transform=s,e?this.rippleElement_.classList.remove(this.CssClasses_.IS_ANIMATING):this.rippleElement_.classList.add(this.CssClasses_.IS_ANIMATING)}},this.animFrameHandler=function(){this.frameCount_-- >0?window.requestAnimationFrame(this.animFrameHandler.bind(this)):this.setRippleStyles(!1)})}},s.register({constructor:y,classAsString:"MaterialRipple",cssClass:"mdl-js-ripple-effect",widget:!1})}()},function(t,e,s){(t.exports=s(2)(!1)).push([t.i,"#clear-action {\n  border-radius: 50%;\n  width: 70px;\n  height: 70px;\n  position: fixed;\n  top: 80px;\n  right: 5px;\n  background: red;\n  color: white;\n  cursor: pointer;\n  z-index: 100;\n}\n\n#clear-action.disabled {\n  opacity: 0.5;\n  cursor: default;\n}\n\n.action-icon {\n  position: absolute;\n  text-align: center;\n  font-size: 25px;\n  height: 20px;\n  top: 0;\n  bottom: 0;\n  margin: auto;\n  left: 0;\n  right: 0;\n}\n\n",""])},function(t,e,s){var n=s(12);"string"==typeof n&&(n=[[t.i,n,""]]);var i={hmr:!0,transform:void 0,insertInto:void 0};s(1)(n,i);n.locals&&(t.exports=n.locals)},function(t,e,s){(t.exports=s(2)(!1)).push([t.i,"#notifier {\n  z-index: 300;\n}\n",""])},function(t,e,s){var n=s(14);"string"==typeof n&&(n=[[t.i,n,""]]);var i={hmr:!0,transform:void 0,insertInto:void 0};s(1)(n,i);n.locals&&(t.exports=n.locals)},function(t,e,s){(t.exports=s(2)(!1)).push([t.i,"#image-list {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.sortable-ghost {\n  opacity: 0.5;\n  border: 1px solid #444;\n  filter: blur(2px);\n}\n",""])},function(t,e,s){var n=s(16);"string"==typeof n&&(n=[[t.i,n,""]]);var i={hmr:!0,transform:void 0,insertInto:void 0};s(1)(n,i);n.locals&&(t.exports=n.locals)},function(t,e,s){(t.exports=s(2)(!1)).push([t.i,"#loading {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 200;\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  cursor: default;\n  animation: rotation 2s infinite linear;\n  opacity: 0;\n  pointer-events: none;\n}\n\n#loading .material-icons {\n  font-size: 50vw;\n  color: #444;\n  opacity: 0.5;\n}\n\n@keyframes rotation {\n  from {\n    -webkit-transform: rotate(0deg);\n  }\n  to {\n    -webkit-transform: rotate(359deg);\n  }\n}\n",""])},function(t,e,s){var n=s(18);"string"==typeof n&&(n=[[t.i,n,""]]);var i={hmr:!0,transform:void 0,insertInto:void 0};s(1)(n,i);n.locals&&(t.exports=n.locals)},function(t,e,s){(t.exports=s(2)(!1)).push([t.i,".image {\n  position: relative;\n  padding: 10px;\n  background: #333;\n  margin: 1px;\n  cursor: move;\n}\n\n.image-name {\n  height: 25px;\n}\n\n.image-description {\n  display: none;\n  color: #777;\n}\n\n.image-element {\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: 50% 50%;\n  width: 250px;\n  height: 250px;\n}\n\n.image-buttons {\n  position: absolute;\n  bottom: 15px;\n  left: 15px;\n}\n\n.remove {\n  background-color: red;\n}\n\n.ellipsis {\n  width: 250px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n",""])},function(t,e,s){var n=s(20);"string"==typeof n&&(n=[[t.i,n,""]]);var i={hmr:!0,transform:void 0,insertInto:void 0};s(1)(n,i);n.locals&&(t.exports=n.locals)},function(t,e,s){"use strict";s.r(e);s(21);e.default=(({id:t,name:e,description:s,src:n})=>`\n  <div id="image-${t}" class="image" data-id="${t}">\n    <div class="image-name ellipsis">${e}</div>\n    <div class="image-description">${s}</div>\n    <div class="image-element" style="background-image: url('${n}')"></div>\n\n    <div class="image-buttons">\n      <button data-id="${t}" class="remove mdl-button mdl-button--fab mdl-button--mini-fab">\n        <i class="material-icons mdl-color-text--white">delete</i>\n      </button>\n\n      <button data-id="${t}" class="edit mdl-button mdl-button--fab mdl-button--mini-fab">\n        <i class="material-icons mdl-color-text--white">mode_edit</i>\n      </button>\n    </div>\n  </div>\n`)},function(t,e){t.exports=function(t){var e="undefined"!=typeof window&&window.location;if(!e)throw new Error("fixUrls requires window.location");if(!t||"string"!=typeof t)return t;var s=e.protocol+"//"+e.host,n=s+e.pathname.replace(/\/[^\/]*$/,"/");return t.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(t,e){var i,o=e.trim().replace(/^"(.*)"$/,function(t,e){return e}).replace(/^'(.*)'$/,function(t,e){return e});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(o)?t:(i=0===o.indexOf("//")?o:0===o.indexOf("/")?s+o:n+o.replace(/^\.\//,""),"url("+JSON.stringify(i)+")")})}},function(t,e,s){(t.exports=s(2)(!1)).push([t.i,"#count {\n  border-radius: 50%;\n  width: 70px;\n  height: 70px;\n  position: fixed;\n  top: 5px;\n  right: 5px;\n  background: #1DA9F0;\n  color: white;\n  cursor: default;\n  z-index: 100;\n}\n\n.count-number {\n  position: absolute;\n  text-align: center;\n  font-size: 25px;\n  height: 20px;\n  top: 0;\n  bottom: 0;\n  margin: auto;\n  left: 0;\n  right: 0;\n}\n",""])},function(t,e,s){var n=s(24);"string"==typeof n&&(n=[[t.i,n,""]]);var i={hmr:!0,transform:void 0,insertInto:void 0};s(1)(n,i);n.locals&&(t.exports=n.locals)},function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var s=arguments[e];for(var n in s)Object.prototype.hasOwnProperty.call(s,n)&&(t[n]=s[n])}return t};e.default=function(t,e){return e?n({},t,e):t},t.exports=e.default},function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t){if(!t)return"void";if(n(t))return t.length?"array":"void";return typeof t};var n=Array.isArray||(Array.isArray=function(t){return""+t!==t&&"[object Array]"==={}.toString.call(t)});t.exports=e.default},function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t,e){var s={};return e.forEach(function(e){var n=t[e];n&&(s[e]=n)}),s},t.exports=e.default},function(t,e,s){"use strict";function n(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t){switch((0,o.default)(t)){case"void":return function(t){return t};case"string":return function(e){return(0,i.default)(e,[t])};case"array":return function(e){return(0,i.default)(e,t)};default:return console.error("Invalid paths argument, should be of type String, Array or Void")}};var i=n(s(28)),o=n(s(27));t.exports=e.default},function(t,e){t.exports=function(t){if(!t.webpackPolyfill){var e=Object.create(t);e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),Object.defineProperty(e,"exports",{enumerable:!0}),e.webpackPolyfill=1}return e}},function(t,e){var s,n,i=t.exports={};function o(){throw new Error("setTimeout has not been defined")}function a(){throw new Error("clearTimeout has not been defined")}function r(t){if(s===setTimeout)return setTimeout(t,0);if((s===o||!s)&&setTimeout)return s=setTimeout,setTimeout(t,0);try{return s(t,0)}catch(e){try{return s.call(null,t,0)}catch(e){return s.call(this,t,0)}}}!function(){try{s="function"==typeof setTimeout?setTimeout:o}catch(t){s=o}try{n="function"==typeof clearTimeout?clearTimeout:a}catch(t){n=a}}();var l,c=[],d=!1,h=-1;function u(){d&&l&&(d=!1,l.length?c=l.concat(c):h=-1,c.length&&p())}function p(){if(!d){var t=r(u);d=!0;for(var e=c.length;e;){for(l=c,c=[];++h<e;)l&&l[h].run();h=-1,e=c.length}l=null,d=!1,function(t){if(n===clearTimeout)return clearTimeout(t);if((n===a||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(t);try{n(t)}catch(e){try{return n.call(null,t)}catch(e){return n.call(this,t)}}}(t)}}function _(t,e){this.fun=t,this.array=e}function m(){}i.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var s=1;s<arguments.length;s++)e[s-1]=arguments[s];c.push(new _(t,e)),1!==c.length||d||r(p)},_.prototype.run=function(){this.fun.apply(null,this.array)},i.title="browser",i.browser=!0,i.env={},i.argv=[],i.version="",i.versions={},i.on=m,i.addListener=m,i.once=m,i.off=m,i.removeListener=m,i.removeAllListeners=m,i.emit=m,i.prependListener=m,i.prependOnceListener=m,i.listeners=function(t){return[]},i.binding=function(t){throw new Error("process.binding is not supported")},i.cwd=function(){return"/"},i.chdir=function(t){throw new Error("process.chdir is not supported")},i.umask=function(){return 0}},function(t,e,s){(function(e){t.exports=function(t,s){var n,i,o,a=!0;function r(t){function i(){s&&s(t,n),s=null}a?e.nextTick(i):i()}function l(t,e,s){n[t]=s,(0==--i||e)&&r(e)}Array.isArray(t)?(n=[],i=t.length):(o=Object.keys(t),n={},i=o.length),i?o?o.forEach(function(e){t[e](function(t,s){l(e,t,s)})}):t.forEach(function(t,e){t(function(t,s){l(e,t,s)})}):r(null),a=!1}}).call(this,s(31))},function(t,e){t.exports=function(t,e){return(e="number"==typeof e?e:1/0)?function t(s,n){return s.reduce(function(s,i){return Array.isArray(i)&&n<e?s.concat(t(i,n+1)):s.concat(i)},[])}(t,1):Array.isArray(t)?t.map(function(t){return t}):t}},function(t,e,s){"use strict";(function(t){var s="object"==typeof t&&t&&t.Object===Object&&t;e.a=s}).call(this,s(4))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,